[[{"l":"\uD83C\uDFE2 OfficeSpaceManager","p":["\uD83C\uDFD7️ Purpose","\uD83D\uDCC1 Folder Structure","\uD83D\uDCD8 License & Credits","\uD83D\uDD01 Backup & Restore","\uD83D\uDD10 Data Safety","\uD83D\uDD17 Useful Microsoft Docs","\uD83D\uDD27 Requirements","\uD83D\uDD27 TODO","\uD83E\uDDE0 Usage","\uD83E\uDDEA Running Tests","\uD83D\uDE4B Support","\uD83D\uDE80 Features","\uD83D\uDEE1 Design Philosophy","A modular PowerShell CLI toolkit to establish a simple, and logical workflow from a single place to establish and manage Microsoft Places, Exchange Room Resources, and Metadata across Microsoft 365 environments.","PowerShell 7+ Build Status Test Coverage","This repository is still under major initial development, and should be considered 'Extreme Alpha'. Any use of this repository is at your own risk knowing there will be continued and ongoing changes underway."]},{"l":"\uD83C\uDFD7️ Purpose","p":["This script is intended to help someone either setup, or manage, a Microsoft Exchange and Teams environment to:","Removes the need to navigate across multiple Admin applications, scripts, blades, etc to setup and maintain","Initial configuration (right settings configured so you can do this)","Bulk upload and maintenance (by way of .csv file) of sites, buildings, floors, desk groups and desks","Manage the bookable desk lifecycle (create, manage, rename, reassign, end of life)","Ensure consistency of naming conventions for desks","Provide disaster recovery for your environment, keeping offline backups of the environment for ease of restoration if and when needed","Offline storage of data to increase speed of action","Make your job as a Microsoft Modern Workplace analyist/engineer several times easier","A more detailed explaination to the working approach for this project can be found in IDEA and SPECIFICATION."]},{"l":"\uD83D\uDEE1 Design Philosophy","p":["See Design Philosophy."]},{"l":"\uD83D\uDE80 Features","p":["✅ All cmdlets and scripts use approved PowerShell verbs for discoverability and linter compliance.","✅ All connection routines are robust, session-reusing, and provide clear diagnostic output for Exchange, Teams, and Places.","✅ Auto-discovery of domains + validation of Exchange & Places configurations to support","✅ Automated first-time tenant setup (robustly enforced at launch)","✅ Backup and restore features, to enable complete download and upload of your configuration","✅ CSV template export/import for bulk editing of sites, buildings, floors, desks, desk pools, etc.","✅ Exchange Online + Microsoft Graph Places + Microsoft Teams integration","✅ Interactive CLI with modular submenus","✅ Logging, draft recovery, and error handling","✅ Metadata and site structure management, and local caching of information for speed","✅ Proactive Exchange Online connection and first-time setup enforcement","✅ Project is fully linted with PSScriptAnalyzer; all code changes validated for compliance.","✅ Resource provisioning (Desk / Room / Equipment)","✅ Robust error handling and user acknowledgement for all critical failures","✅ Simulation test suite with cleanup tools","✅ Uses native functions within existing PowerShell modules wherever possible","✅ Verbose session logging and input capture via -LogVerbose flag","For full list, see Features."]},{"l":"\uD83D\uDD27 Requirements","p":["See Requirements."]},{"l":"\uD83E\uDDE0 Usage","p":["Clone the repo:","Open PowerShell 7+","Navigate to the folder","Run:","The optional -LogVerbose flag enables full session transcript and input logging to Logs/TerminalVerbose.","On first run, you will be guided through robust first-time setup and Exchange Online connection. All errors require user acknowledgement and are logged."]},{"l":"\uD83D\uDCC1 Folder Structure","p":["WARNING: Due to continued development, this is subject to change.","See Folder Structure."]},{"l":"\uD83E\uDDEA Running Tests","p":["See Running Tests."]},{"l":"\uD83D\uDD01 Backup & Restore","p":["For more infomation, see Running Tests."]},{"l":"\uD83D\uDD17 Useful Microsoft Docs","p":["Microsoft Places Overview","Microsoft Graph Places API","Exchange Room Mailbox Docs","Set-CalendarProcessing"]},{"l":"\uD83D\uDE4B Support","p":["See Support."]},{"l":"\uD83D\uDD10 Data Safety","p":["See Data Safety"]},{"l":"\uD83D\uDD27 TODO","p":["See TODO and Known Issues."]},{"l":"\uD83D\uDCD8 License & Credits","p":["OfficeSpaceManager – Internal Admin Toolkit© 2025 – Michael Harris. Use it well. Built with PowerShell for Microsoft 365 tenants","See LICENSE for further information."]}],[{"l":"Common Instructions (Backup: 2025-07-24)","p":["...continued in next backup file section...",".gitignore (exclude temp, logs, build artifacts)","Avoid errors that require later fixing.","CHANGELOG.md (track changes, enhancements, bug fixes)","Clean up after yourself, don't leave excess lines at the end of a file. A PowerShell script generally needs no blank lines at the end of a script, whereas a Markdown file needs at least one blank line. This may be a small thing, but it helps keep things looking clean.","CONTRIBUTING.md (contribution guidelines, coding standards, review process)","Create a new project folder with a clear structure: scripts, modules, tests, documentation, resources.","Create a robust root resolver snippet (such as Resolve-OfficeSpaceManagerRoot.ps1) at the top of any project where Import-Module is used, and ensure this snippet is incorporated at the top of every script that uses Import-Module.","Do not use unapproved verbs. If you're unsure how to approach a new verb you're intending to use, or an existing verb already in use, ensure you ask me and provide appropriate guidence to make an informed decision to resolve the issue.","Don't add regressions to content or code. If you take something out without justification and/or without explicitely asking, you will be made to fix it.","Dot-sourcing methods used in scripts must be extreemly robust, error proof, and always succeed, by doing all of the following:","Ensure these files are properly updated when making changes within the project.","Ensuring appropriate fallback methods are in place for dot-sourcing to dynamically resolve the project root based on a known anchor file (e.g., look for README.md or .git upwards from $PSScriptRoot).","Gather requirements and scope from the user and document in IDEA.md and SPECIFICATION.md.","Help establish and push to a GitHub repository with initial commit.","Include at project root:","LICENSE (MIT, with credit line: Copyright (c) 2025, Michael Harris, All rights reserved.)","MODULES.md (document modules, and the functions within them, and their purposes)","Quality of work is always the top priority.","README.md (see section 18 and section 21 for detailed content expectations)","Recursively review all .md files in the project to stay current with expectations and outstanding tasks.","Remove all $PSScriptRoot/.. navigation from module imports once this has been properly implimented for a project.","Respect .gitignore for files to avoid updating.","Set up version control (Git) and issue tracking (e.g., GitHub Issues).","This is a backup of the original Common Instructions file prior to reordering and optimisation.","Update all Import-Module statements to use $env:OfficeSpaceManagerRoot for absolute, reliable paths.","Use Australian English (EN-AU) for all documentation and comments, except where user-facing output requires otherwise.","Use authoritative resources and ask when in doubt.","Use IDEA.md, SPECIFICATION.md, README.md, TODO.md, KNOWNISSUES.md, and .gitignore to inform scope and decisions. If missing or unclear, ask for input and update as needed.","Use only approved verbs in naming; ask if unsure.","Use the latest PowerShell version and ensure compatibility.","Using a project root vaiable (such as $env:OfficeSpaceManagerRoot = Split-Path -Parent $PSScriptRoot) at the start of the script, and then","using that variable to reference all other files in the project to ensure the folder path does not break at all, for example Import-Module (Join-Path $env:OfficeSpaceManagerRoot 'Modules\\Utilities\\Utilities.psm1') -Force.","Wants all future PowerShell code and responses to follow these consolidated expectations and desires:"]}],[{"l":"Common Instructions (Backup: 2025-07-24)","p":["This is a backup of the original Common Instructions file prior to reordering and optimisation.","Wants all future PowerShell code and responses to follow these consolidated expectations and desires:"]},{"l":"1. Foundational Principles & Project Setup","p":[".gitignore (exclude temp, logs, build artifacts)","Avoid errors that require later fixing.","CHANGELOG.md (track changes, enhancements, bug fixes)","Clean up after yourself, don't leave excess lines at the end of a file. A PowerShell script generally needs no blank lines at the end of a script, whereas a Markdown file needs at least one blank line. This may be a small thing, but it helps keep things looking clean.","CONTRIBUTING.md (contribution guidelines, coding standards, review process)","Create a new project folder with a clear structure: scripts, modules, tests, documentation, resources.","Create a robust root resolver snippet (such as Resolve-OfficeSpaceManagerRoot.ps1) at the top of any project where Import-Module is used, and ensure this snippet is incorporated at the top of every script that uses Import-Module.","Do not use unapproved verbs. If you're unsure how to approach a new verb you're intending to use, or an existing verb already in use, ensure you ask me and provide appropriate guidence to make an informed decision to resolve the issue.","Don't add regressions to content or code. If you take something out without justification and/or without explicitely asking, you will be made to fix it.","Dot-sourcing methods used in scripts must be extreemly robust, error proof, and always succeed, by doing all of the following:","Ensure these files are properly updated when making changes within the project.","Ensuring appropriate fallback methods are in place for dot-sourcing to dynamically resolve the project root based on a known anchor file (e.g., look for README.md or .git upwards from $PSScriptRoot).","Gather requirements and scope from the user and document in IDEA.md and SPECIFICATION.md.","Help establish and push to a GitHub repository with initial commit.","Include at project root:","LICENSE (MIT, with credit line: Copyright (c) 2025, Michael Harris, All rights reserved.)","MODULES.md (document modules, and the functions within them, and their purposes)","Quality of work is always the top priority.","README.md (see section 18 and section 21 for detailed content expectations)","Recursively review all .md files in the project to stay current with expectations and outstanding tasks.","Remove all $PSScriptRoot/.. navigation from module imports once this has been properly implimented for a project.","Respect .gitignore for files to avoid updating.","Set up version control (Git) and issue tracking (e.g., GitHub Issues).","Update all Import-Module statements to use $env:OfficeSpaceManagerRoot for absolute, reliable paths.","Use Australian English (EN-AU) for all documentation and comments, except where user-facing output requires otherwise.","Use authoritative resources and ask when in doubt.","Use IDEA.md, SPECIFICATION.md, README.md, TODO.md, KNOWNISSUES.md, and .gitignore to inform scope and decisions. If missing or unclear, ask for input and update as needed.","Use only approved verbs in naming; ask if unsure.","Use the latest PowerShell version and ensure compatibility.","Using a project root vaiable (such as $env:OfficeSpaceManagerRoot = Split-Path -Parent $PSScriptRoot) at the start of the script, and then","using that variable to reference all other files in the project to ensure the folder path does not break at all, for example Import-Module (Join-Path $env:OfficeSpaceManagerRoot 'Modules\\Utilities\\Utilities.psm1') -Force."]},{"l":"2. Documentation & Comments","p":["All public functions and modules must have comprehensive, clear documentation.","Use inline comments judiciously to explain complex or non-obvious code.","Keep documentation up-to-date with code changes."]},{"l":"3. Coding Standards","p":["Follow the PowerShell scripting guidelines and best practices.","Maintain a consistent coding style: indentation, spacing, naming conventions.","Use meaningful and descriptive names for variables, functions, and files."]},{"l":"4. Error Handling & Logging","p":["Implement robust error handling in all scripts and functions.","Use try/catch/finally blocks where appropriate.","Log errors and important events to a designated log file or system."]},{"l":"5. Security & Permissions","p":["Adhere to the principle of least privilege: only request and use the permissions absolutely necessary.","Secure sensitive information: passwords, API keys, etc. Do not hard-code them; use secure methods to handle them.","Regularly review and audit permissions and access controls."]},{"l":"6. Performance & Optimization","p":["Write efficient, performant code. Avoid unnecessary complexity and overhead.","Optimize for speed and resource usage where critical, but not at the expense of readability and maintainability.","Regularly review and profile code for potential optimizations."]},{"l":"7. Testing & Validation","p":["Implement automated tests for all functions and modules: unit tests, integration tests, etc.","Use a consistent and clear structure for tests: arrange, act, assert.","Regularly run and update tests to ensure code changes do not introduce new issues."]},{"l":"8. Deployment & Release Management","p":["Follow a consistent and documented process for deploying and releasing code.","Use versioning for all releases: major.minor.patch.","Document and communicate all changes, enhancements, and bug fixes in the release notes."]},{"l":"9. Maintenance & Support","p":["Regularly review and maintain all scripts, functions, and documentation.","Provide support and assistance for users as needed.","Be responsive to feedback, issues, and change requests."]},{"l":"10. Collaboration & Communication","p":["Communicate clearly and promptly with all project stakeholders.","Collaborate effectively with other developers, users, and contributors.","Be open and receptive to feedback, suggestions, and constructive criticism."]},{"l":"11. Learning & Improvement","p":["Continuously seek to learn and improve: new PowerShell features, best practices, design patterns, etc.","Regularly review and reflect on your work, seeking opportunities for improvement and growth.","Share knowledge and insights with the broader community: write articles, give talks, contribute to forums, etc."]},{"l":"12. Community & Contribution","p":["Engage with the community: participate in discussions, forums, user groups, etc.","Contribute to the community: share scripts, modules, tools, etc. that others may find useful.","Be respectful, helpful, and constructive in all interactions."]},{"l":"13. Tools & Resources","p":["Use and recommend authoritative, high-quality tools and resources.","Keep all tools and resources up-to-date and properly configured.","Document and share useful tools, resources, and references."]},{"l":"14. Compliance & Legal","p":["Adhere to all relevant laws, regulations, and standards.","Ensure all code, content, and contributions comply with licensing and attribution requirements.","Regularly review and update compliance and legal knowledge and practices."]},{"l":"15. Environment & Sustainability","p":["Consider the environmental impact of your code and actions.","Strive to reduce resource usage, energy consumption, and waste.","Promote and practice sustainable computing and development."]},{"l":"16. Accessibility & Inclusivity","p":["Ensure all code, tools, and documentation are accessible to all users, including those with disabilities.","Follow best practices for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Be inclusive and considerate in all communications, designs, and interactions."]},{"l":"17. User Experience & Design","p":["Consider the user experience in all aspects of your work: usability, performance, reliability, etc.","Follow best practices and guidelines for user-centered design and development.","Regularly seek and incorporate user feedback and testing."]},{"l":"18. Specific File & Folder Naming Conventions","p":["Use clear, descriptive names for all files and folders.","Use consistent naming patterns: lowercase, hyphens for spaces, etc.","Avoid special characters, spaces, and overly long names."]},{"l":"19. Module & Function Documentation Standards","p":["Document all public modules and functions in MODULES.md.","Include detailed information: purpose, parameters, return values, examples, etc.","Keep documentation up-to-date with code changes and enhancements."]},{"l":"20. Change Tracking & Changelog Maintenance","p":["Use CHANGELOG.md to track all changes, enhancements, and bug fixes.","Follow the format: date, version, author, description of changes.","Update CHANGELOG.md with every change, no matter how small."]},{"l":"21. Contribution Guidelines & Review Process","p":["Follow CONTRIBUTING.md for all contributions: code, documentation, etc.","Submit all changes for review before merging or deploying.","Be open to feedback, revisions, and discussions."]},{"l":"22. Issue Tracking & Management","p":["Use GitHub Issues or similar for tracking all issues, bugs, and feature requests.","Keep issues up-to-date with status, priority, and assignee.","Regularly review and triage issues: close, assign, prioritize, etc."]},{"l":"23. Project Management & Planning","p":["Use project management tools and practices to plan, track, and manage all work.","Break work into manageable tasks, with clear priorities and deadlines.","Regularly review and adjust plans, priorities, and resources."]},{"l":"24. Security Practices & Vulnerability Management","p":["Follow security best practices in all coding, configuration, and deployment activities.","Regularly review and update security practices, tools, and knowledge.","Be proactive in identifying and addressing potential security vulnerabilities."]},{"l":"25. Performance Monitoring & Optimization","p":["Monitor and analyze the performance of all scripts, functions, and systems.","Use profiling, logging, and monitoring tools to identify and address performance issues.","Regularly review and optimize code, configurations, and resources for optimal performance."]},{"l":"26. Backup & Recovery Procedures","p":["Implement and maintain robust backup and recovery procedures for all critical data and systems.","Regularly test and verify backups and recovery procedures.","Document and communicate backup and recovery procedures and responsibilities."]},{"l":"27. Compliance Auditing & Reporting","p":["Regularly audit and review all work for compliance with standards, policies, and regulations.","Document and report on compliance status, issues, and actions.","Be prepared to provide evidence and documentation for audits and reviews."]},{"l":"28. Training & Knowledge Transfer","p":["Provide training and knowledge transfer for all new tools, processes, and practices.","Document and share training materials, guides, and resources.","Encourage and facilitate continuous learning and development."]},{"l":"29. Resource Management & Optimization","p":["Optimize the use of all resources: time, money, materials, etc.","Regularly review and adjust resource allocations, budgets, and expenditures.","Be transparent and accountable in all resource management activities."]},{"l":"30. Stakeholder Engagement & Communication","p":["Identify and engage all relevant stakeholders in a timely and effective manner.","Communicate regularly and transparently with stakeholders about progress, issues, and changes.","Be responsive and adaptive to stakeholder feedback, needs, and concerns."]},{"l":"31. Risk Management & Mitigation","p":["Identify and assess all potential risks and issues.","Develop and implement mitigation and contingency plans.","Regularly review and update risk management practices and plans."]},{"l":"32. Ethical & Professional Conduct","p":["Adhere to the highest standards of ethical and professional conduct.","Be honest, transparent, and accountable in all actions and decisions.","Treat all individuals with respect, fairness, and dignity."]},{"l":"33. Environmental & Social Responsibility","p":["Consider the environmental and social impact of all work and decisions.","Strive to promote sustainability, accessibility, and inclusivity.","Be a responsible and engaged member of the community and society."]},{"l":"34. Innovation & Continuous Improvement","p":["Encourage and pursue innovation, creativity, and continuous improvement.","Be open to new ideas, approaches, and technologies.","Regularly review and reflect on practices, processes, and outcomes, seeking opportunities for enhancement and evolution."]},{"l":"35. Documentation Standards & Best Practices","p":["Follow best practices and standards for all documentation: clarity, completeness, consistency, etc.","Use templates, checklists, and guidelines to ensure high-quality documentation.","Regularly review and update documentation practices, tools, and resources."]},{"l":"36. Code Review & Quality Assurance","p":["Participate in and contribute to code reviews and quality assurance activities.","Provide constructive feedback, suggestions, and improvements.","Be open to feedback and revisions, and learn from the review process."]},{"l":"37. User Acceptance Testing & Feedback","p":["Involve users in testing and validating all new features, enhancements, and fixes.","Gather and analyze user feedback, and make necessary adjustments and improvements.","Communicate clearly and promptly with users about changes, updates, and resolutions."]},{"l":"38. Release Planning & Management","p":["Plan and manage releases carefully, considering all aspects: scope, schedule, resources, risks, etc.","Communicate clearly and promptly with all stakeholders about release plans, changes, and impacts.","Monitor and adjust release plans and activities as needed to ensure success."]},{"l":"39. Post-Release Review & Evaluation","p":["Conduct post-release reviews and evaluations for all major releases.","Document and analyze results, outcomes, and lessons learned.","Communicate findings and recommendations to all relevant stakeholders."]},{"l":"40. Long-term Support & Maintenance","p":["Plan and provide for long-term support and maintenance of all critical systems, tools, and resources.","Regularly review and adjust support and maintenance plans, resources, and priorities.","Communicate clearly and promptly with all stakeholders about support and maintenance plans and activities."]},{"l":"41. Legacy Code & Technical Debt Management","p":["Identify and manage legacy code and technical debt proactively and systematically.","Develop and implement plans and processes for refactoring, updating, and improving legacy code and systems.","Regularly review and report on legacy code and technical debt status, issues, and actions."]},{"l":"42. System Architecture & Design Principles","p":["Follow best practices and principles for system architecture and design: modularity, scalability, reliability, etc.","Document and communicate system architecture and design decisions, rationale, and changes.","Regularly review and update system architecture and design practices, tools, and resources."]},{"l":"43. Configuration Management & Infrastructure as Code","p":["Use configuration management and infrastructure as code practices and tools consistently and effectively.","Document and communicate configuration management and infrastructure as code practices, standards, and changes.","Regularly review and update configuration management and infrastructure as code practices, tools, and resources."]},{"l":"44. Monitoring, Logging, & Alerting Standards","p":["Implement and maintain robust monitoring, logging, and alerting for all critical systems and resources.","Document and communicate monitoring, logging, and alerting standards, practices, and tools.","Regularly review and update monitoring, logging, and alerting practices, tools, and resources."]},{"l":"45. Incident Management & Response","p":["Follow best practices and standards for incident management and response: detection, analysis, containment, eradication, recovery, and lessons learned.","Document and communicate incident management and response practices, standards, and changes.","Regularly review and update incident management and response practices, tools, and resources."]},{"l":"46. Change Management & Control","p":["Use change management and control practices and tools consistently and effectively.","Document and communicate change management and control practices, standards, and changes.","Regularly review and update change management and control practices, tools, and resources."]},{"l":"47. Release Engineering & DevOps Practices","p":["Follow best practices and standards for release engineering and DevOps: automation, integration, testing, deployment, monitoring, and feedback.","Document and communicate release engineering and DevOps practices, standards, and changes.","Regularly review and update release engineering and DevOps practices, tools, and resources."]},{"l":"48. Performance Engineering & Optimization","p":["Follow best practices and standards for performance engineering and optimization: profiling, tuning, caching, load balancing, etc.","Document and communicate performance engineering and optimization practices, standards, and changes.","Regularly review and update performance engineering and optimization practices, tools, and resources."]},{"l":"49. Security Engineering & Best Practices","p":["Follow best practices and standards for security engineering: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security engineering practices, standards, and changes.","Regularly review and update security engineering practices, tools, and resources."]},{"l":"50. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance practices, standards, and changes.","Regularly review and update compliance practices, tools, and resources."]},{"l":"51. Risk Assessment & Management","p":["Conduct regular risk assessments and audits.","Document and communicate risk assessment and management practices, standards, and changes.","Regularly review and update risk assessment and management practices, tools, and resources."]},{"l":"52. Training & Awareness Programs","p":["Develop and deliver training and awareness programs on all relevant topics: security, compliance, best practices, etc.","Document and communicate training and awareness programs, standards, and changes.","Regularly review and update training and awareness programs, materials, and resources."]},{"l":"53. Resource Allocation & Budgeting","p":["Plan and manage resource allocation and budgeting carefully and transparently.","Document and communicate resource allocation and budgeting practices, standards, and changes.","Regularly review and update resource allocation and budgeting practices, tools, and resources."]},{"l":"54. Stakeholder Analysis & Engagement","p":["Conduct regular stakeholder analysis and engagement activities.","Document and communicate stakeholder analysis and engagement practices, standards, and changes.","Regularly review and update stakeholder analysis and engagement practices, tools, and resources."]},{"l":"55. Communication & Reporting Standards","p":["Follow best practices and standards for communication and reporting: clarity, conciseness, completeness, etc.","Document and communicate communication and reporting practices, standards, and changes.","Regularly review and update communication and reporting practices, tools, and resources."]},{"l":"56. Ethical Standards & Best Practices","p":["Follow the highest ethical standards and best practices in all activities and interactions.","Document and communicate ethical standards and best practices, and changes.","Regularly review and update ethical standards and best practices, tools, and resources."]},{"l":"57. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and best practices, and changes.","Regularly review and update environmental standards and best practices, tools, and resources."]},{"l":"58. Social Responsibility & Community Engagement","p":["Engage in and support social responsibility and community engagement activities and initiatives.","Document and communicate social responsibility and community engagement practices, standards, and changes.","Regularly review and update social responsibility and community engagement practices, tools, and resources."]},{"l":"59. Innovation & Continuous Improvement Culture","p":["Foster and promote a culture of innovation and continuous improvement.","Document and communicate innovation and continuous improvement practices, standards, and changes.","Regularly review and update innovation and continuous improvement practices, tools, and resources."]},{"l":"60. Recognition & Reward Systems","p":["Implement and maintain recognition and reward systems for all contributors and stakeholders.","Document and communicate recognition and reward practices, standards, and changes.","Regularly review and update recognition and reward practices, tools, and resources."]},{"l":"61. Conflict Resolution & Grievance Procedures","p":["Implement and maintain conflict resolution and grievance procedures for all contributors and stakeholders.","Document and communicate conflict resolution and grievance practices, standards, and changes.","Regularly review and update conflict resolution and grievance practices, tools, and resources."]},{"l":"62. Health, Safety & Wellbeing Standards","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing practices, standards, and changes.","Regularly review and update health, safety, and wellbeing practices, tools, and resources."]},{"l":"63. Diversity, Equity & Inclusion Standards","p":["Promote and practice diversity, equity, and inclusion in all activities and interactions.","Document and communicate diversity, equity, and inclusion practices, standards, and changes.","Regularly review and update diversity, equity, and inclusion practices, tools, and resources."]},{"l":"64. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility practices, standards, and changes.","Regularly review and update accessibility practices, tools, and resources."]},{"l":"65. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability practices, standards, and changes.","Regularly review and update usability practices, tools, and resources."]},{"l":"66. Reliability & Availability Standards","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability practices, standards, and changes.","Regularly review and update reliability and availability practices, tools, and resources."]},{"l":"67. Maintainability & Supportability Standards","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability practices, standards, and changes.","Regularly review and update maintainability and supportability practices, tools, and resources."]},{"l":"68. Scalability & Flexibility Standards","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility practices, standards, and changes.","Regularly review and update scalability and flexibility practices, tools, and resources."]},{"l":"69. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance practices, standards, and changes.","Regularly review and update performance practices, tools, and resources."]},{"l":"70. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security practices, standards, and changes.","Regularly review and update security practices, tools, and resources."]},{"l":"71. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance practices, standards, and changes.","Regularly review and update compliance practices, tools, and resources."]},{"l":"72. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management practices, standards, and changes.","Regularly review and update risk management practices, tools, and resources."]},{"l":"73. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness practices, standards, and changes.","Regularly review and update training and awareness practices, tools, and resources."]},{"l":"74. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management practices, standards, and changes.","Regularly review and update resource management practices, tools, and resources."]},{"l":"75. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement practices, standards, and changes.","Regularly review and update stakeholder engagement practices, tools, and resources."]},{"l":"76. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication practices, standards, and changes.","Regularly review and update communication practices, tools, and resources."]},{"l":"77. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"78. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"79. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"80. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"81. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"82. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"83. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"84. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"85. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"86. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"87. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"88. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"89. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"90. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"91. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"92. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"93. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"94. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"95. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"96. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"97. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"98. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"99. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"100. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"101. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"102. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"103. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"104. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"105. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"106. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"107. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"108. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"109. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"110. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"111. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"112. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"113. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"114. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"115. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"116. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"117. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"118. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"119. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"120. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"121. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"122. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"123. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"124. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"125. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"126. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"127. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"128. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"129. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"130. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"131. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"132. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"133. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"134. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"135. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"136. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"137. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"138. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"139. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"140. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"141. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"142. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"143. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"144. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"145. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"146. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"147. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"148. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"149. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"150. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"151. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"152. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"153. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"154. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"155. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"156. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"157. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"158. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"159. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"160. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"161. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"162. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"163. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"164. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"165. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"166. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"167. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"168. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"169. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"170. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"171. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"172. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"173. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"174. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"175. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"176. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"177. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"178. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"179. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"180. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"181. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"182. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"183. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"184. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"185. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"186. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"187. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"188. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"189. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"190. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"191. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"192. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"193. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"194. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"195. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"196. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"197. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"198. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"199. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"200. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"201. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"202. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"203. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"204. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"205. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"206. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"207. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"208. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"209. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"210. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"211. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"212. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"213. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"214. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"215. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"216. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"217. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"218. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"219. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"220. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"221. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"222. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"223. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"224. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"225. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"226. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"227. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"228. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"229. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"230. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"231. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"232. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"233. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"234. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"235. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"236. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"237. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"238. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"239. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"240. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"241. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"242. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"243. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"244. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"245. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"246. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"247. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"248. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"249. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"250. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"251. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"252. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"253. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"254. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"255. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"256. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"257. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"258. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"259. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"260. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"261. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"262. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"263. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"264. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"265. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"266. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"267. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"268. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"269. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"270. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"271. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"272. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"273. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"274. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"275. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"276. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"277. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"278. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"279. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"280. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"281. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"282. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"283. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"284. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"285. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"286. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"287. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"288. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"289. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"290. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"291. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"292. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"293. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"294. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"295. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"296. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"297. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"298. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"299. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"300. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"301. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"302. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"303. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"304. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"305. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"306. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"307. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"308. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"309. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"310. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"311. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"312. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"313. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"314. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"315. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"316. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"317. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"318. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"319. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"320. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"321. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"322. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"323. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"324. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"325. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"326. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"327. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"328. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"329. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"330. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"331. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"332. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"333. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"334. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"335. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"336. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"337. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"338. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"339. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"340. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"341. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"342. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"343. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"344. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"345. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"346. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"347. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"348. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"349. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"350. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"351. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"352. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"353. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"354. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"355. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"356. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"357. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"358. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"359. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"360. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"361. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"362. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"363. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"364. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"365. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"366. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"367. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"368. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"369. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"370. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"371. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"372. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"373. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"374. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"375. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"376. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"377. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"378. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"379. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"380. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"381. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"382. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"383. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"384. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"385. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"386. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"387. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"388. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"389. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"390. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"391. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"392. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"393. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"394. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"395. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"396. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"397. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"398. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"399. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"400. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"401. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"402. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"403. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"404. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"405. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"406. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"407. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"408. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"409. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"410. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"411. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"412. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"413. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"414. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"415. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"416. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"417. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"418. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"419. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"420. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"421. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"422. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"423. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"424. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"425. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"426. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"427. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"428. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"429. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"430. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"431. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"432. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"433. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"434. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"435. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"436. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"437. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"438. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"439. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"440. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"441. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"442. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"443. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"444. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"445. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"446. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"447. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"448. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"449. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"450. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"451. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"452. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"453. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"454. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"455. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"456. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"457. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"458. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"459. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"460. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"461. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"462. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"463. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"464. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"465. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"466. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"467. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"468. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"469. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"470. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"471. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"472. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"473. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"474. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"475. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"476. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"477. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"478. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"479. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"480. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"481. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"482. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"483. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"484. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"485. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"486. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"487. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"488. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"489. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"490. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"491. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"492. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"493. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"494. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"495. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"496. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"497. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"498. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"499. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"500. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"501. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"502. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"503. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"504. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"505. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"506. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"507. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"508. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"509. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"510. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"511. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"512. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"513. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"514. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"515. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"516. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"517. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"518. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"519. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"520. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"521. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"522. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"523. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"524. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"525. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"526. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"527. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"528. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"529. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"530. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"531. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"532. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"533. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"534. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"535. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"536. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"537. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"538. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"539. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"540. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"541. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"542. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"543. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"544. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"545. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"546. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"547. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"548. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"549. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"550. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"551. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"552. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"553. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"554. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"555. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"556. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"557. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"558. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"559. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"560. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"561. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"562. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"563. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"564. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"565. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"566. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"567. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"568. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"569. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"570. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"571. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"572. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"573. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"574. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"575. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"576. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"577. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"578. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"579. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"580. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"581. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"582. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"583. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"584. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"585. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"586. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"587. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"588. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"589. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"590. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"591. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"592. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"593. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"594. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"595. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"596. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"597. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"598. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"599. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"600. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"601. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"602. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"603. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"604. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"605. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"606. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"607. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"608. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"609. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"610. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"611. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"612. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"613. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"614. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"615. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"616. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"617. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"618. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"619. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"620. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"621. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"622. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"623. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"624. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"625. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"626. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"627. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"628. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"629. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"630. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"631. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"632. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"633. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"634. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"635. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"636. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"637. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"638. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"639. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"640. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"641. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"642. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"643. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"644. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"645. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"646. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"647. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"648. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"649. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"650. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"651. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"652. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"653. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"654. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"655. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"656. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"657. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"658. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"659. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"660. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"661. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"662. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"663. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"664. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"665. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"666. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"667. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"668. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"669. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"670. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"671. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"672. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"673. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"674. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"675. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"676. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"677. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"678. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"679. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"680. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"681. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"682. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"683. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"684. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"685. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"686. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"687. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"688. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"689. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"690. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"691. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"692. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"693. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"694. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"695. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"696. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"697. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"698. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"699. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"700. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"701. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"702. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"703. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"704. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"705. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"706. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"707. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc.","Document and communicate ethical standards and practices, and changes.","Regularly review and update ethical standards and practices, tools, and resources."]},{"l":"708. Environmental Standards & Best Practices","p":["Follow best practices and standards for environmental sustainability: energy efficiency, waste reduction, sustainable materials, etc.","Document and communicate environmental standards and practices, and changes.","Regularly review and update environmental standards and practices, tools, and resources."]},{"l":"709. Social Responsibility Standards & Best Practices","p":["Follow best practices and standards for social responsibility: community engagement, ethical sourcing, etc.","Document and communicate social responsibility standards and practices, and changes.","Regularly review and update social responsibility standards and practices, tools, and resources."]},{"l":"710. Innovation Standards & Best Practices","p":["Follow best practices and standards for innovation: creativity, experimentation, continuous improvement, etc.","Document and communicate innovation standards and practices, and changes.","Regularly review and update innovation standards and practices, tools, and resources."]},{"l":"711. Recognition Standards & Best Practices","p":["Follow best practices and standards for recognition: fairness, transparency, consistency, etc.","Document and communicate recognition standards and practices, and changes.","Regularly review and update recognition standards and practices, tools, and resources."]},{"l":"712. Conflict Resolution Standards & Best Practices","p":["Follow best practices and standards for conflict resolution: fairness, transparency, consistency, etc.","Document and communicate conflict resolution standards and practices, and changes.","Regularly review and update conflict resolution standards and practices, tools, and resources."]},{"l":"713. Health, Safety & Wellbeing Standards & Best Practices","p":["Follow best practices and standards for health, safety, and wellbeing: risk assessment, incident reporting, emergency procedures, etc.","Document and communicate health, safety, and wellbeing standards and practices, and changes.","Regularly review and update health, safety, and wellbeing standards and practices, tools, and resources."]},{"l":"714. Diversity, Equity & Inclusion Standards & Best Practices","p":["Follow best practices and standards for diversity, equity, and inclusion: representation, participation, accessibility, etc.","Document and communicate diversity, equity, and inclusion standards and practices, and changes.","Regularly review and update diversity, equity, and inclusion standards and practices, tools, and resources."]},{"l":"715. Accessibility Standards & Best Practices","p":["Follow best practices and standards for accessibility: semantic HTML, ARIA roles, keyboard navigation, etc.","Document and communicate accessibility standards and practices, and changes.","Regularly review and update accessibility standards and practices, tools, and resources."]},{"l":"716. Usability Standards & Best Practices","p":["Follow best practices and standards for usability: user-centered design, usability testing, etc.","Document and communicate usability standards and practices, and changes.","Regularly review and update usability standards and practices, tools, and resources."]},{"l":"717. Reliability & Availability Standards & Best Practices","p":["Follow best practices and standards for reliability and availability: redundancy, failover, backup, etc.","Document and communicate reliability and availability standards and practices, and changes.","Regularly review and update reliability and availability standards and practices, tools, and resources."]},{"l":"718. Maintainability & Supportability Standards & Best Practices","p":["Follow best practices and standards for maintainability and supportability: modularity, documentation, testing, etc.","Document and communicate maintainability and supportability standards and practices, and changes.","Regularly review and update maintainability and supportability standards and practices, tools, and resources."]},{"l":"719. Scalability & Flexibility Standards & Best Practices","p":["Follow best practices and standards for scalability and flexibility: load balancing, clustering, etc.","Document and communicate scalability and flexibility standards and practices, and changes.","Regularly review and update scalability and flexibility standards and practices, tools, and resources."]},{"l":"720. Performance Standards & Best Practices","p":["Follow best practices and standards for performance: profiling, tuning, caching, load balancing, etc.","Document and communicate performance standards and practices, and changes.","Regularly review and update performance standards and practices, tools, and resources."]},{"l":"721. Security Standards & Best Practices","p":["Follow best practices and standards for security: threat modeling, vulnerability assessment, penetration testing, secure coding, etc.","Document and communicate security standards and practices, and changes.","Regularly review and update security standards and practices, tools, and resources."]},{"l":"722. Compliance Standards & Best Practices","p":["Follow best practices and standards for compliance: data protection, privacy, accessibility, etc.","Document and communicate compliance standards and practices, and changes.","Regularly review and update compliance standards and practices, tools, and resources."]},{"l":"723. Risk Management Standards & Best Practices","p":["Follow best practices and standards for risk management: identification, assessment, mitigation, monitoring, etc.","Document and communicate risk management standards and practices, and changes.","Regularly review and update risk management standards and practices, tools, and resources."]},{"l":"724. Training & Awareness Standards & Best Practices","p":["Follow best practices and standards for training and awareness: content, delivery, frequency, etc.","Document and communicate training and awareness standards and practices, and changes.","Regularly review and update training and awareness standards and practices, tools, and resources."]},{"l":"725. Resource Management Standards & Best Practices","p":["Follow best practices and standards for resource management: allocation, utilization, monitoring, etc.","Document and communicate resource management standards and practices, and changes.","Regularly review and update resource management standards and practices, tools, and resources."]},{"l":"726. Stakeholder Engagement Standards & Best Practices","p":["Follow best practices and standards for stakeholder engagement: identification, analysis, communication, etc.","Document and communicate stakeholder engagement standards and practices, and changes.","Regularly review and update stakeholder engagement standards and practices, tools, and resources."]},{"l":"727. Communication Standards & Best Practices","p":["Follow best practices and standards for communication: clarity, conciseness, completeness, etc.","Document and communicate communication standards and practices, and changes.","Regularly review and update communication standards and practices, tools, and resources."]},{"l":"728. Ethical Standards & Best Practices","p":["Follow best practices and standards for ethical conduct: integrity, accountability, transparency, etc."]}],[{"l":"PowerShell Script Review Report"},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Invoke-MainMenu.ps1","p":["$PSScriptRoot/Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Run-FirstTimeSetup.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Show-ActionHistory.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Render-PanelHeader.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Create-ConfigBackup.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1","11","Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Run-FirstTimeSetup.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Show-ActionHistory.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Render-PanelHeader.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Create-ConfigBackup.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 18: Write-Host Launching in PowerShell 7...; Line 23: Write-Host Please install PowerShell 7: https://learn.microsoft.com/powershell/scripting/install/installing-powershell; Line 43: Write-Host Installed $mod successfully. -ForegroundColor Green; Line 122: Write-Host \uD83D\uDD52 Last metadata sync was just $minutesOld minutes ago.; Line 133: Write-Host ⏩ Skipping sync and using recent cached data.; Line 158: Write-Host [1] Manage Resources; Line 159: Write-Host [2] Orphan Metadata Management; Line 160: Write-Host [3] Configuration Setup; Line 161: Write-Host [4] Metadata Logs; Line 162: Write-Host [5] Run First-Time Setup Wizard; Line 163: Write-Host [6] Exit; Line 175: Write-Host `nExiting... -ForegroundColor Cyan; Line 181: Write-Host Invalid option. -ForegroundColor Yellow; Line 190: Write-Host `nâ\u009DŒ A critical error occurred while running the CLI: -ForegroundColor Red; Line 191: Write-Host $_.Exception.Message -ForegroundColor Yellow; Line 200: Write-Host `nSession ended. Cache refreshed. Goodbye! -ForegroundColor Green No corresponding .Tests.ps1 file found. Slow cmdlets in loops: Line 182: Start-Sleep -Seconds 2; Line 182: Start-Sleep -Seconds 2; Line 182: Start-Sleep -Seconds 2 PSScriptAnalyzer: [PSAvoidGlobalVars] Found global variable 'Global:ActionLog'. (Line 60) PSScriptAnalyzer: [PSAvoidGlobalVars] Found global variable 'Global:LogFile'. (Line 62) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Invoke-MainMenu.ps1' (Line ) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 18) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 23) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 43) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 122) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 133) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 158) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 159) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 160) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 161) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 162) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 163) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 175) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 181) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 190) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 191) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 200)","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 18: Write-Host \"Launching in PowerShell 7...\"; Line 23: Write-Host \"Please install PowerShell 7: https://learn.microsoft.com/powershell/scripting/install/installing-powershell\"; Line 43: Write-Host \"Installed $mod successfully.\" -ForegroundColor Green; Line 122: Write-Host \"\uD83D\uDD52 Last metadata sync was just $minutesOld minutes ago.\"; Line 133: Write-Host \"⏩ Skipping sync and using recent cached data.\"; Line 158: Write-Host \"[1] Manage Resources\"; Line 159: Write-Host \"[2] Orphan & Metadata Management\"; Line 160: Write-Host \"[3] Configuration & Setup\"; Line 161: Write-Host \"[4] Metadata & Logs\"; Line 162: Write-Host \"[5] Run First-Time Setup Wizard\"; Line 163: Write-Host \"[6] Exit\"; Line 175: Write-Host \" nExiting... -ForegroundColor Cyan; Line 181: Write-Host Invalid option. -ForegroundColor Yellow; Line 190: Write-Host nâ\u009DŒ A critical error occurred while running the CLI:\" -ForegroundColor Red; Line 191: Write-Host $_.Exception.Message -ForegroundColor Yellow; Line 200: Write-Host \"`nSession ended. Cache refreshed. Goodbye!\" -ForegroundColor Green","Line 182: Start-Sleep -Seconds 2; Line 182: Start-Sleep -Seconds 2; Line 182: Start-Sleep -Seconds 2","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\ConfigurationMenu.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Run-FirstTimeSetup.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add Write-Log calls for key actions. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Run-FirstTimeSetup.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 4: Write-Host [1] Import / Export Templates; Line 5: Write-Host [2] Manage Sites, Buildings Floors; Line 6: Write-Host [3] Sync Cloud Resources to Local Metadata; Line 7: Write-Host [4] Environment Setup Validation; Line 8: Write-Host [5] Configuration Backup Restore; Line 9: Write-Host [6] Backup Templates; Line 10: Write-Host [7] Run First-Time Setup Wizard; Line 11: Write-Host [8] Return to Main Menu; Line 18: Write-Host [1.1] Export All Templates; Line 19: Write-Host [1.2] Validate Templates; Line 20: Write-Host [1.3] Import Validated Templates; Line 30: Write-Host [2.1] Export Site/Building Templates; Line 31: Write-Host [2.2] Import Site/Building from CSV; Line 32: Write-Host [2.3] View Current Site/Building Structure; Line 33: Write-Host [2.4] Return to Previous Menu; Line 46: Write-Host âœ”ï¸\u008F Cached metadata refreshed.; Line 50: Write-Host [4.1] Enable Microsoft Places Features; Line 51: Write-Host [4.2] Validate Microsoft Places Configuration; Line 52: Write-Host [4.3] Validate Exchange Resource Setup; Line 53: Write-Host [4.4] Update Mailbox Types in Bulk; Line 54: Write-Host [4.5] Ensure Calendar Processing Settings; Line 55: Write-Host [4.6] Pin Places App in Teams; Line 68: Write-Host [5.1] Create Configuration Backup (.zip); Line 69: Write-Host [5.2] Restore Configuration from Backup; Line 70: Write-Host [5.3] Return to Previous Menu; Line 77: Write-Host Invalid option. -ForegroundColor Yellow; Line 83: Write-Host [6.1] Export All Templates (CSV); Line 84: Write-Host [6.2] Create Backup Archive (ZIP); Line 85: Write-Host [6.3] Restore from Backup Archive; Line 86: Write-Host [6.4] Return to Previous Menu; Line 102: Write-Host Invalid option. -ForegroundColor Yellow No corresponding .Tests.ps1 file found. Slow cmdlets in loops: Line 78: Start-Sleep -Seconds 2; Line 103: Start-Sleep -Seconds 2 PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 4) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 5) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 6) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 7) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 8) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 9) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 10) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 11) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 18) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 19) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 20) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 30) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 31) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 32) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 33) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 46) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'ConfigurationMenu.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 4: Write-Host \"[1] Import / Export Templates\"; Line 5: Write-Host \"[2] Manage Sites, Buildings & Floors\"; Line 6: Write-Host \"[3] Sync Cloud Resources to Local Metadata\"; Line 7: Write-Host \"[4] Environment Setup & Validation\"; Line 8: Write-Host \"[5] Configuration Backup & Restore\"; Line 9: Write-Host \"[6] Backup & Templates\"; Line 10: Write-Host \"[7] Run First-Time Setup Wizard\"; Line 11: Write-Host \"[8] Return to Main Menu\"; Line 18: Write-Host \"[1.1] Export All Templates\"; Line 19: Write-Host \"[1.2] Validate Templates\"; Line 20: Write-Host \"[1.3] Import Validated Templates\"; Line 30: Write-Host \"[2.1] Export Site/Building Templates\"; Line 31: Write-Host \"[2.2] Import Site/Building from CSV\"; Line 32: Write-Host \"[2.3] View Current Site/Building Structure\"; Line 33: Write-Host \"[2.4] Return to Previous Menu\"; Line 46: Write-Host \"âœ”ï¸\u008F Cached metadata refreshed.\"; Line 50: Write-Host \"[4.1] Enable Microsoft Places Features\"; Line 51: Write-Host \"[4.2] Validate Microsoft Places Configuration\"; Line 52: Write-Host \"[4.3] Validate Exchange Resource Setup\"; Line 53: Write-Host \"[4.4] Update Mailbox Types in Bulk\"; Line 54: Write-Host \"[4.5] Ensure Calendar Processing Settings\"; Line 55: Write-Host \"[4.6] Pin Places App in Teams\"; Line 68: Write-Host \"[5.1] Create Configuration Backup (.zip)\"; Line 69: Write-Host \"[5.2] Restore Configuration from Backup\"; Line 70: Write-Host \"[5.3] Return to Previous Menu\"; Line 77: Write-Host \"Invalid option.\" -ForegroundColor Yellow; Line 83: Write-Host \" [6.1] Export All Templates (CSV)\"; Line 84: Write-Host \" [6.2] Create Backup Archive (ZIP)\"; Line 85: Write-Host \" [6.3] Restore from Backup Archive\"; Line 86: Write-Host \" [6.4] Return to Previous Menu\"; Line 102: Write-Host \"Invalid option.\" -ForegroundColor Yellow","Line 78: Start-Sleep -Seconds 2; Line 103: Start-Sleep -Seconds 2","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\ManageResourcesMenu.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Wizards\\Manage-ResourceWizard.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Wizards\\Retry-DraftRunner.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Manage\\Toggle-ResourceState.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Run-BookingSimulation.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Wizards\\Create-DeskPoolWizard.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Wizards\\Manage-DeskPools.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add Write-Log calls for key actions. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Wizards\\Manage-ResourceWizard.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Wizards\\Retry-DraftRunner.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Manage\\Toggle-ResourceState.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Run-BookingSimulation.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Wizards\\Create-DeskPoolWizard.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Wizards\\Manage-DeskPools.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 15: Write-Host [1] Create or Edit a Resource (Desk / Room / Equipment); Line 17: Write-Host [2] Recover Failed Draft(s); Line 19: Write-Host [3] Retire or Reactivate a Resource; Line 20: Write-Host [4] Run Booking Simulation Test; Line 21: Write-Host [5] Create Desk Pool; Line 22: Write-Host [6] Manage Desk Pools; Line 23: Write-Host [7] Return to Main Menu; Line 35: Write-Host No drafts available to recover. -ForegroundColor Yellow; Line 55: Write-Host Invalid option. -ForegroundColor Yellow No corresponding .Tests.ps1 file found. Slow cmdlets in loops: Line 36: Start-Sleep -Seconds 2; Line 56: Start-Sleep -Seconds 2 PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ManageResourcesMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 15) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ManageResourcesMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 17) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ManageResourcesMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 19) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ManageResourcesMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 20) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ManageResourcesMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 21) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ManageResourcesMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 22) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ManageResourcesMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 23) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ManageResourcesMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 35) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ManageResourcesMenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 55) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'ManageResourcesMenu.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 15: Write-Host \"[1] Create or Edit a Resource (Desk / Room / Equipment)\"; Line 17: Write-Host \"[2] Recover Failed Draft(s)\"; Line 19: Write-Host \"[3] Retire or Reactivate a Resource\"; Line 20: Write-Host \"[4] Run Booking Simulation Test\"; Line 21: Write-Host \"[5] Create Desk Pool\"; Line 22: Write-Host \"[6] Manage Desk Pools\"; Line 23: Write-Host \"[7] Return to Main Menu\"; Line 35: Write-Host \"No drafts available to recover.\" -ForegroundColor Yellow; Line 55: Write-Host \"Invalid option.\" -ForegroundColor Yellow","Line 36: Start-Sleep -Seconds 2; Line 56: Start-Sleep -Seconds 2","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\OrphanMetadatamenu.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add Write-Log calls for key actions. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 4: Write-Host [1] Find Orphaned Resources; Line 5: Write-Host [2] Fix Orphaned Resources; Line 6: Write-Host [3] Validate Desk Pool Mappings; Line 7: Write-Host [4] Detect Non-Standard Resource Names; Line 8: Write-Host [5] Suggest and Apply Renames; Line 9: Write-Host [6] Return to Main Menu No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'OrphanMetadatamenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 4) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'OrphanMetadatamenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 5) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'OrphanMetadatamenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 6) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'OrphanMetadatamenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 7) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'OrphanMetadatamenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 8) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'OrphanMetadatamenu.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 9)","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 4: Write-Host \"[1] Find Orphaned Resources\"; Line 5: Write-Host \"[2] Fix Orphaned Resources\"; Line 6: Write-Host \"[3] Validate Desk Pool Mappings\"; Line 7: Write-Host \"[4] Detect Non-Standard Resource Names\"; Line 8: Write-Host \"[5] Suggest and Apply Renames\"; Line 9: Write-Host \"[6] Return to Main Menu\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Render-PanelHeader.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","2","6","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add Write-Log calls for key actions. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 14: Write-Host ; Line 15: Write-Host $top -ForegroundColor Cyan; Line 16: Write-Host $middle -ForegroundColor Cyan; Line 17: Write-Host $bottom -ForegroundColor Cyan; Line 18: Write-Host Functions missing help comments: Render-PanelHeader Unused functions: Render-PanelHeader No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Render-PanelHeader' uses an unapproved verb. (Line 1) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Render-PanelHeader.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 14) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Render-PanelHeader.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 15) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Render-PanelHeader.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 16) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Render-PanelHeader.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 17) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Render-PanelHeader.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 18) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Render-PanelHeader.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 14: Write-Host \"\"; Line 15: Write-Host $top -ForegroundColor Cyan; Line 16: Write-Host $middle -ForegroundColor Cyan; Line 17: Write-Host $bottom -ForegroundColor Cyan; Line 18: Write-Host \"\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Render-PanelHeader","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Show-ActionHistory.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add Write-Log calls for key actions. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 7: Write-Host `n(No log entries found for today.)`n -ForegroundColor DarkGray; Line 13: Write-Host `n(No log entries found for today.)`n -ForegroundColor DarkGray; Line 17: Write-Host `n╔══════════ Recent Actions ══════════╗ -ForegroundColor DarkGray; Line 20: Write-Host • $_ -ForegroundColor Gray; Line 23: Write-Host ╚════════════════════════════════════╝`n -ForegroundColor DarkGray Functions missing help comments: Show-ActionHistory Unused functions: Show-ActionHistory No corresponding .Tests.ps1 file found. Slow cmdlets in loops: Line 11: $lines = Get-Content $logFile | Where-Object { $_.Trim() -ne }; Line 11: $lines = Get-Content $logFile | Where-Object { $_.Trim() -ne } PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Show-ActionHistory.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 11: $lines = Get-Content $logFile","Line 7: Write-Host \" n(No log entries found for today.) n\" -ForegroundColor DarkGray; Line 13: Write-Host \" n(No log entries found for today.) n\" -ForegroundColor DarkGray; Line 17: Write-Host \" n╔══════════ Recent Actions ══════════╗ -ForegroundColor DarkGray; Line 20: Write-Host • $_ -ForegroundColor Gray; Line 23: Write-Host ╚════════════════════════════════════╝ n\" -ForegroundColor DarkGray","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Show-ActionHistory","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Where-Object { $_.Trim() -ne \"\" }","Where-Object { $_.Trim() -ne \"\" }; Line 11: $lines = Get-Content $logFile","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Manage\\Toggle-ResourceState.ps1","p":["$PSScriptRoot/../../Shared/Global-ErrorHandling.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 8: Write-Host ❌ Invalid type. -ForegroundColor Red; Line 20: Write-Host ⚠ No $resourceType data file found. -ForegroundColor Yellow; Line 35: Write-Host ✔️ $resourceType '$($selected.DisplayName)' is now $status. -ForegroundColor Cyan No corresponding .Tests.ps1 file found. Slow cmdlets in loops: Line 24: $data = Get-Content $file | ConvertFrom-Json PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Toggle-ResourceState.ps1' (Line ) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Toggle-ResourceState.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 8) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Toggle-ResourceState.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 20) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Toggle-ResourceState.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 35)","ConvertFrom-Json","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 24: $data = Get-Content $file","Line 8: Write-Host \"❌ Invalid type.\" -ForegroundColor Red; Line 20: Write-Host \"⚠ No $resourceType data file found.\" -ForegroundColor Yellow; Line 35: Write-Host \"✔️ resourceType '($selected.DisplayName)' is now $status.\" -ForegroundColor Cyan","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Create-DeskPoolWizard.ps1","p":["$PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1","1","Add or improve header comment. Add .DESCRIPTION to header comment. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 18: Write-Host No desks available. Please create desks first. -ForegroundColor Yellow; Line 25: Write-Host ❌ No desks found for site '$siteCode'. -ForegroundColor Red; Line 47: Write-Host ✔️ Desk Pool '$poolName' created with $($selectedDesks.Count) desks. -ForegroundColor Green No corresponding .Tests.ps1 file found. Slow cmdlets in loops: Line 21: $desks = Get-Content $deskFile | ConvertFrom-Json PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Create-DeskPoolWizard.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 18) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Create-DeskPoolWizard.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 25) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Create-DeskPoolWizard.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 47) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Create-DeskPoolWizard.ps1' (Line )","ConvertFrom-Json","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 18: Write-Host \"No desks available. Please create desks first.\" -ForegroundColor Yellow; Line 25: Write-Host \"❌ No desks found for site '$siteCode'.\" -ForegroundColor Red; Line 47: Write-Host \"✔️ Desk Pool '$poolName' created with $($selectedDesks.Count) desks.\" -ForegroundColor Green","Line 21: $desks = Get-Content $deskFile","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Manage-DeskPools.ps1","p":["$PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1","1","Add or improve header comment. Add .DESCRIPTION to header comment. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 19: Write-Host `nSelected: $($selectedPool.PoolName) -ForegroundColor Cyan; Line 20: Write-Host 1. Rename Pool; Line 21: Write-Host 2. Edit Assigned Desks; Line 22: Write-Host 3. Delete Pool; Line 23: Write-Host 4. Cancel; Line 42: Write-Host \uD83D\uDDD1 Pool deleted. -ForegroundColor Red; Line 54: Write-Host ✔️ Pool updated. -ForegroundColor Green No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-DeskPools.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 19) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-DeskPools.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 20) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-DeskPools.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 21) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-DeskPools.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 22) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-DeskPools.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 23) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-DeskPools.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 42) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-DeskPools.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 54) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Manage-DeskPools.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 19: Write-Host \"`nSelected: $($selectedPool.PoolName)\" -ForegroundColor Cyan; Line 20: Write-Host \"1. Rename Pool\"; Line 21: Write-Host \"2. Edit Assigned Desks\"; Line 22: Write-Host \"3. Delete Pool\"; Line 23: Write-Host \"4. Cancel\"; Line 42: Write-Host \"\uD83D\uDDD1 Pool deleted.\" -ForegroundColor Red; Line 54: Write-Host \"✔️ Pool updated.\" -ForegroundColor Green","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Manage-ResourceWizard.ps1","p":["$PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Get-StandardDeskName.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Simulate-BookingTest.ps1","1","Add or improve header comment. Add .DESCRIPTION to header comment. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Get-StandardDeskName.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Simulate-BookingTest.ps1 Risky commands: Line 171: $securePwd = (New-SecurePassword) | ConvertTo-SecureString -AsPlainText -Force Use Write-Output/Write-Verbose instead of Write-Host: Line 18: Write-Host â\u009DŒ Invalid resource type. -ForegroundColor Red; Line 76: Write-Host [$($i+1)] $($domains[$i]); Line 144: Write-Host `nâš ï¸\u008F Mailbox already exists. Comparing with local data... -ForegroundColor Yellow; Line 150: 'K' { Write-Host âœ”ï¸\u008F Keeping existing Exchange mailbox. }; Line 173: Write-Host ðŸ› Creating mailbox in Exchange...; Line 199: Write-Host ðŸ\u008F¢ Microsoft Places configuration applied. -ForegroundColor Green; Line 206: Write-Host ðŸ’¾ Draft saved to $draftPath for retry.; Line 231: Write-Host âœ… Simulation test passed for $alias@$domain -ForegroundColor Green; Line 250: Write-Host â\u009DŒ Resource not provisioned in Exchange. Skipping simulation. -ForegroundColor Yellow Duplicate function names: New-SecurePassword (also in C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Manage-ResourceWizard.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Retry-DraftRunner.ps1) Functions missing help comments: New-SecurePassword Unused functions: New-SecurePassword No corresponding .Tests.ps1 file found. Slow cmdlets in loops: Line 25: $items = Get-Content $resourceFile | ConvertFrom-Json; Line 69: $tenantConfig = Get-Content $domainConfig | ConvertFrom-Json PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-ResourceWizard.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 18) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-ResourceWizard.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 76) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-ResourceWizard.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 144) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-ResourceWizard.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 150) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-ResourceWizard.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 231) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-ResourceWizard.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 250) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Manage-ResourceWizard.ps1' (Line )","ConvertFrom-Json","ConvertFrom-Json; Line 69: $tenantConfig = Get-Content $domainConfig","ConvertTo-SecureString -AsPlainText -Force","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 171: $securePwd = (New-SecurePassword)","Line 18: Write-Host \"â\u009DŒ Invalid resource type.\" -ForegroundColor Red; Line 76: Write-Host \"[$($i+1)] $($domains[$i])\"; Line 144: Write-Host \"`nâš ï¸\u008F Mailbox already exists. Comparing with local data...\" -ForegroundColor Yellow; Line 150: 'K' { Write-Host \"âœ”ï¸\u008F Keeping existing Exchange mailbox.\" }; Line 173: Write-Host \"ðŸ› Creating mailbox in Exchange...\"; Line 199: Write-Host \"ðŸ\u008F¢ Microsoft Places configuration applied.\" -ForegroundColor Green; Line 206: Write-Host \"ðŸ’¾ Draft saved to $draftPath for retry.\"; Line 231: Write-Host \"âœ… Simulation test passed for $alias@$domain\" -ForegroundColor Green; Line 250: Write-Host \"â\u009DŒ Resource not provisioned in Exchange. Skipping simulation.\" -ForegroundColor Yellow","Line 25: $items = Get-Content $resourceFile","Long Functions","Missing Function Help","New-SecurePassword","New-SecurePassword (also in C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Manage-ResourceWizard.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Retry-DraftRunner.ps1)","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Retry-DraftRunner.ps1","p":["$PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, $PSScriptRoot\\TestSuite\\Simulate-BookingTest.ps1","1","Add or improve header comment. Add Write-Log calls for key actions. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, $PSScriptRoot\\TestSuite\\Simulate-BookingTest.ps1 Risky commands: Line 44: $securePwd = (New-SecurePassword) | ConvertTo-SecureString -AsPlainText -Force Use Write-Output/Write-Verbose instead of Write-Host: Line 14: Write-Host \uD83C\uDF89 No draft resources found to recover. -ForegroundColor Green; Line 46: Write-Host \uD83D\uDCE6 Retrying Exchange provisioning for: $($resource.DisplayName) -ForegroundColor Cyan; Line 51: Write-Host ⚠️ Mailbox already exists in Exchange. Skipping creation. -ForegroundColor Yellow; Line 81: Write-Host ✅ Retry successful. Updating metadata and cleaning up draft... -ForegroundColor Green; Line 95: Write-Host \uD83E\uDDF9 Draft cleaned up.; Line 105: Write-Host Draft preserved: $($selected.FullName) Duplicate function names: New-SecurePassword (also in C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Manage-ResourceWizard.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Retry-DraftRunner.ps1) Functions missing help comments: New-SecurePassword Unused functions: New-SecurePassword No corresponding .Tests.ps1 file found. Slow cmdlets in loops: Line 22: $resource = Get-Content $selected.FullName | ConvertFrom-Json; Line 87: $existingData = Get-Content $metadataPath | ConvertFrom-Json PSScriptAnalyzer: [PSAvoidAssignmentToAutomaticVariable] The Variable 'pwd' is an automatic variable that is built into PowerShell, assigning to it might have undesired side effects. If assignment is not by design, please use a different name. (Line 32) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Retry-DraftRunner.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 14) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Retry-DraftRunner.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 46) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Retry-DraftRunner.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 51) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Retry-DraftRunner.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 81) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Retry-DraftRunner.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 95) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Retry-DraftRunner.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 105) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Retry-DraftRunner.ps1' (Line ) PSScriptAnalyzer: [PSAvoidUsingConvertToSecureStringWithPlainText] File 'Retry-DraftRunner.ps1' uses ConvertTo-SecureString with plaintext. This will expose secure information. Encrypted standard strings should be used instead. (Line 44) PSScriptAnalyzer: [PSUseShouldProcessForStateChangingFunctions] Function 'New-SecurePassword' has verb that could change system state. Therefore, the function has to support 'ShouldProcess'. (Line 29) PSScriptAnalyzer: [PSUseDeclaredVarsMoreThanAssignments] The variable 'chars' is assigned but never used. (Line 30)","ConvertFrom-Json","ConvertFrom-Json; Line 87: $existingData = Get-Content $metadataPath","ConvertTo-SecureString -AsPlainText -Force","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 14: Write-Host \"\uD83C\uDF89 No draft resources found to recover.\" -ForegroundColor Green; Line 46: Write-Host \"\uD83D\uDCE6 Retrying Exchange provisioning for: $($resource.DisplayName)\" -ForegroundColor Cyan; Line 51: Write-Host \"⚠️ Mailbox already exists in Exchange. Skipping creation.\" -ForegroundColor Yellow; Line 81: Write-Host \"✅ Retry successful. Updating metadata and cleaning up draft...\" -ForegroundColor Green; Line 95: Write-Host \"\uD83E\uDDF9 Draft cleaned up.\"; Line 105: Write-Host \"Draft preserved: $($selected.FullName)\"","Line 22: $resource = Get-Content $selected.FullName","Line 44: $securePwd = (New-SecurePassword)","Long Functions","Missing Function Help","New-SecurePassword","New-SecurePassword (also in C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Manage-ResourceWizard.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Retry-DraftRunner.ps1)","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Create-ConfigBackup.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 37: Write-Host `n\uD83D\uDCE6 Backup created: $zipPath -ForegroundColor Green Functions missing help comments: Create-ConfigBackup Unused functions: Create-ConfigBackup No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Create-ConfigBackup.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 37) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Create-ConfigBackup' uses an unapproved verb. (Line 2) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Create-ConfigBackup.ps1' (Line )","Create-ConfigBackup","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 37: Write-Host \"`n\uD83D\uDCE6 Backup created: $zipPath\" -ForegroundColor Green","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Enable-PlacesFeatures.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 3: Write-Host ✔️ Enabling Microsoft Places features...; Line 5: Write-Host ✅ Microsoft Places enabled. Functions missing help comments: Enable-PlacesFeatures Unused functions: Enable-PlacesFeatures No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Enable-PlacesFeatures.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 3) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Enable-PlacesFeatures.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 5) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Enable-PlacesFeatures.ps1' (Line ) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Enable-PlacesFeatures' uses a plural noun. A singular noun should be used instead. (Line 2)","Deep Nesting","Duplicate Functions","Enable-PlacesFeatures","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 3: Write-Host \"✔️ Enabling Microsoft Places features...\"; Line 5: Write-Host \"✅ Microsoft Places enabled.\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Restore-ConfigBackup.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Create-ConfigBackup.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Create-ConfigBackup.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 50: $missing | ForEach-Object { Write-Host - $_ -ForegroundColor Yellow }; Line 70: Write-Host `nðŸ“‹ Summary of Incoming Metadata:`n -ForegroundColor Cyan; Line 71: Write-Host Desks: $($desks.Count); Line 72: Write-Host Desk Pools: $($pools.Count); Line 73: Write-Host Sites: $($sites.Count); Line 74: Write-Host Buildings: $($buildings.Count); Line 91: Write-Host `nâœ… Metadata restored successfully. -ForegroundColor Green Functions missing help comments: Restore-ConfigBackup, Try-LoadJson Unused functions: Restore-ConfigBackup No corresponding .Tests.ps1 file found. Slow cmdlets in loops: Line 58: return Get-Content $filePath -Raw | ConvertFrom-Json -ErrorAction Stop PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Restore-ConfigBackup.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 50) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Restore-ConfigBackup.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 70) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Restore-ConfigBackup.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 91) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Try-LoadJson' uses an unapproved verb. (Line 56) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Restore-ConfigBackup.ps1' (Line )","ConvertFrom-Json -ErrorAction Stop","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","ForEach-Object { Write-Host \" - $_\" -ForegroundColor Yellow }; Line 70: Write-Host \" nðŸ“‹ Summary of Incoming Metadata: n\" -ForegroundColor Cyan; Line 71: Write-Host \" Desks: $($desks.Count)\"; Line 72: Write-Host \" Desk Pools: $($pools.Count)\"; Line 73: Write-Host \" Sites: $($sites.Count)\"; Line 74: Write-Host \" Buildings: $($buildings.Count)\"; Line 91: Write-Host \"`nâœ… Metadata restored successfully.\" -ForegroundColor Green","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 50: $missing","Line 58: return Get-Content $filePath -Raw","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Restore-ConfigBackup","Restore-ConfigBackup, Try-LoadJson","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Run-FirstTimeSetup.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Enable-PlacesFeatures.ps1, $PSScriptRoot\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TemplateManagement\\Export-MetadataTemplates.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TemplateManagement\\Export-AllTemplates.ps1","2","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Enable-PlacesFeatures.ps1, $PSScriptRoot\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TemplateManagement\\Export-MetadataTemplates.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TemplateManagement\\Export-AllTemplates.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 13: Write-Host Ã°Å¸â€\u009DÂ§ Collecting tenant domain info...; Line 16: Write-Host Detected default domain: $defaultDomain; Line 21: Write-Host `nMicrosoft Places is not enabled.; Line 28: Write-Host `nÃ°Å¸â€œÂ¥ Syncing cached resources...; Line 32: Write-Host `nWould you like to export editable metadata templates for Pathways and Roles?; Line 36: Write-Host `nÃ°Å¸â€œÂ¥ You can now populate the CSVs and import them using Configuration Templates Import Metadata; Line 39: Write-Host `nÃ°Å¸â€œÂ\u0081 Generating templates...; Line 42: Write-Host `nÃ¢Å“â€¦ First-Time Setup Complete. Functions missing help comments: Run-FirstTimeSetup Unused functions: Run-FirstTimeSetup No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-FirstTimeSetup.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 13) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-FirstTimeSetup.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 16) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-FirstTimeSetup.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 21) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-FirstTimeSetup.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 28) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-FirstTimeSetup.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 32) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-FirstTimeSetup.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 36) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-FirstTimeSetup.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 39) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-FirstTimeSetup.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 42) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Run-FirstTimeSetup' uses an unapproved verb. (Line 10) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Run-FirstTimeSetup.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 13: Write-Host \"Ã°Å¸â€\u009DÂ§ Collecting tenant domain info...\"; Line 16: Write-Host \"Detected default domain: $defaultDomain\"; Line 21: Write-Host \" nMicrosoft Places is not enabled.; Line 28: Write-Host nÃ°Å¸â€œÂ¥ Syncing cached resources...\"; Line 32: Write-Host \" nWould you like to export editable metadata templates for Pathways and Roles?; Line 36: Write-Host nÃ°Å¸â€œÂ¥ You can now populate the CSVs and import them using Configuration > Templates > Import Metadata\"; Line 39: Write-Host \" nÃ°Å¸â€œÂ\u0081 Generating templates...; Line 42: Write-Host nÃ¢Å“â€¦ First-Time Setup Complete.\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Run-FirstTimeSetup","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Validate-ExchangeSetup.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","2","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 25: Write-Host Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Exchange resource validation completed Functions missing help comments: Validate-ExchangeSetup Unused functions: Validate-ExchangeSetup No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-ExchangeSetup.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 25) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Validate-ExchangeSetup' uses an unapproved verb. (Line 10) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Validate-ExchangeSetup.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 25: Write-Host \"Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Exchange resource validation completed\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Validate-ExchangeSetup","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Validate-PlacesFeatures.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 7: Write-Host ✅ Places feature is ENABLED.; Line 14: Write-Host ✅ Places App is pinned in Teams. Functions missing help comments: Validate-PlacesFeatures Unused functions: Validate-PlacesFeatures No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-PlacesFeatures.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 7) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-PlacesFeatures.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 14) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Validate-PlacesFeatures' uses an unapproved verb. (Line 2) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Validate-PlacesFeatures.ps1' (Line ) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Validate-PlacesFeatures' uses a plural noun. A singular noun should be used instead. (Line 2)","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 7: Write-Host \"✅ Places feature is ENABLED.\"; Line 14: Write-Host \"✅ Places App is pinned in Teams.\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Validate-PlacesFeatures","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\EnvironmentSetup\\Ensure-CalendarProcessingSettings.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","2","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 28: Write-Host Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Calendar processing settings validated Functions missing help comments: Ensure-CalendarProcessingSettings Unused functions: Ensure-CalendarProcessingSettings No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Ensure-CalendarProcessingSettings.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 28) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Ensure-CalendarProcessingSettings' uses an unapproved verb. (Line 10) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Ensure-CalendarProcessingSettings.ps1' (Line ) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Ensure-CalendarProcessingSettings' uses a plural noun. A singular noun should be used instead. (Line 10)","Deep Nesting","Duplicate Functions","Ensure-CalendarProcessingSettings","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 28: Write-Host \"Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Calendar processing settings validated\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\EnvironmentSetup\\Pin-PlacesAppInTeams.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","2","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 17: Write-Host Ã¢Å“â€¦ Places app already pinned.; Line 21: Write-Host Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Pinned Places app in Teams setup policy. Functions missing help comments: Pin-PlacesAppInTeams Unused functions: Pin-PlacesAppInTeams No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Pin-PlacesAppInTeams.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 17) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Pin-PlacesAppInTeams' uses an unapproved verb. (Line 10) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Pin-PlacesAppInTeams' uses a plural noun. A singular noun should be used instead. (Line 10) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Pin-PlacesAppInTeams.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 17: Write-Host \"Ã¢Å“â€¦ Places app already pinned.\"; Line 21: Write-Host \"Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Pinned Places app in Teams setup policy.\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Pin-PlacesAppInTeams","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\EnvironmentSetup\\Update-MailboxTypes.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","2","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 30: Write-Host $alias Ã¢â€ â€™ Suggested Type: $suggestedType (Current: $type); Line 34: Write-Host Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Updated $alias to $suggestedType; Line 40: Write-Host `nÃ¢Å“â€¦ Mailbox type update complete. Functions missing help comments: Update-MailboxTypes Unused functions: Update-MailboxTypes No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Update-MailboxTypes.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 30) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Update-MailboxTypes.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 34) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Update-MailboxTypes.ps1' (Line ) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Update-MailboxTypes' uses a plural noun. A singular noun should be used instead. (Line 10) PSScriptAnalyzer: [PSUseShouldProcessForStateChangingFunctions] Function 'Update-MailboxTypes' has verb that could change system state. Therefore, the function has to support 'ShouldProcess'. (Line 10)","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 30: Write-Host \"$alias Ã¢â€ â€™ Suggested Type: $suggestedType (Current: $type)\"; Line 34: Write-Host \"Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Updated $alias to $suggestedType\"; Line 40: Write-Host \"`nÃ¢Å“â€¦ Mailbox type update complete.\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Update-MailboxTypes","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\OrphanFixer\\Detect-NonStandardResources.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Functions missing help comments: Detect-NonStandardResources Unused functions: Detect-NonStandardResources No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Detect-NonStandardResources' uses an unapproved verb. (Line 2) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Detect-NonStandardResources' uses a plural noun. A singular noun should be used instead. (Line 2) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Detect-NonStandardResources.ps1' (Line )","Deep Nesting","Detect-NonStandardResources","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\OrphanFixer\\Find-OrphanedResources.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 18: Write-Host `n\uD83D\uDD0D Orphaned Desks (in Metadata but not Exchange): $($orphansMetadata.Count); Line 20: Write-Host \uD83D\uDFE1 DeskId: $($_.DeskId) – Missing ExchangeObjectId; Line 23: Write-Host `n\uD83D\uDD0D Orphaned Mailboxes (Exchange resources not in metadata): $($orphanedMailboxes.Count); Line 25: Write-Host \uD83D\uDFE1 $($_.Alias) – $($_.DisplayName) Functions missing help comments: Find-OrphanedResources Unused functions: Find-OrphanedResources No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Find-OrphanedResources.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 18) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Find-OrphanedResources.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 20) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Find-OrphanedResources.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 23) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Find-OrphanedResources.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 25) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Find-OrphanedResources.ps1' (Line ) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Find-OrphanedResources' uses a plural noun. A singular noun should be used instead. (Line 2)","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Find-OrphanedResources","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 18: Write-Host \" n\uD83D\uDD0D Orphaned Desks (in Metadata but not Exchange): $($orphansMetadata.Count); Line 20: Write-Host \uD83D\uDFE1 DeskId: $($_.DeskId) – Missing ExchangeObjectId; Line 23: Write-Host n\uD83D\uDD0D Orphaned Mailboxes (Exchange resources not in metadata): $($orphanedMailboxes.Count)\"; Line 25: Write-Host \"\uD83D\uDFE1 (.Alias) – (.DisplayName)\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\OrphanFixer\\Fix-OrphanedResources.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 13: Write-Host ✅ No orphaned mailboxes to fix.; Line 18: Write-Host `n\uD83D\uDCEC [$($orphan.Alias)] - $($orphan.DisplayName); Line 38: Write-Host ✔️ Added new desk to metadata: $deskId; Line 43: Write-Host `n✅ Metadata updated with fixed orphans. Functions missing help comments: Fix-OrphanedResources Unused functions: Fix-OrphanedResources No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Fix-OrphanedResources.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 13) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Fix-OrphanedResources.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 18) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Fix-OrphanedResources.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 38) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Fix-OrphanedResources.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 43) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Fix-OrphanedResources' uses an unapproved verb. (Line 2) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Fix-OrphanedResources.ps1' (Line ) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Fix-OrphanedResources' uses a plural noun. A singular noun should be used instead. (Line 2)","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Fix-OrphanedResources","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 13: Write-Host \"✅ No orphaned mailboxes to fix.\"; Line 18: Write-Host \" n\uD83D\uDCEC [$($orphan.Alias)] - $($orphan.DisplayName); Line 38: Write-Host ✔️ Added new desk to metadata: $deskId; Line 43: Write-Host n✅ Metadata updated with fixed orphans.\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\OrphanFixer\\Suggest-RenameResource.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 9: Write-Host `nCurrent Name: $($r.DisplayName); Line 15: Write-Host ✔️ Renamed. Functions missing help comments: Suggest-RenameResource Unused functions: Suggest-RenameResource No corresponding .Tests.ps1 file found. Slow cmdlets in loops: Line 5: $cache = Get-Content .\\Metadata\\CachedResources.json | ConvertFrom-Json PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Suggest-RenameResource.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 9) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Suggest-RenameResource.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 15) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Suggest-RenameResource' uses an unapproved verb. (Line 2) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Suggest-RenameResource.ps1' (Line )","ConvertFrom-Json","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 5: $cache = Get-Content \".\\Metadata\\CachedResources.json\"","Line 9: Write-Host \"`nCurrent Name: $($r.DisplayName)\"; Line 15: Write-Host \"✔️ Renamed.\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggest-RenameResource","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\OrphanFixer\\Validate-DeskPoolMappings.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 17: Write-Host ✅ Desk pool mapping validation complete. Functions missing help comments: Validate-DeskPoolMappings Unused functions: Validate-DeskPoolMappings No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-DeskPoolMappings.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 17) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Validate-DeskPoolMappings' uses an unapproved verb. (Line 2) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Validate-DeskPoolMappings.ps1' (Line ) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Validate-DeskPoolMappings' uses a plural noun. A singular noun should be used instead. (Line 2)","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 17: Write-Host \"✅ Desk pool mapping validation complete.\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Validate-DeskPoolMappings","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","p":["$PSScriptRoot/Global-ErrorHandling.ps1, ExchangeOnlineManagement","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/Global-ErrorHandling.ps1, ExchangeOnlineManagement Use Write-Output/Write-Verbose instead of Write-Host: Line 16: Write-Host \uD83D\uDD10 Already connected as: $upnString -ForegroundColor Green; Line 34: Write-Host \uD83D\uDD10 Connected as: $upn -ForegroundColor Green Functions missing help comments: Connect-ExchangeAdmin Unused functions: Connect-ExchangeAdmin No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Connect-ExchangeAdmin.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 16) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Connect-ExchangeAdmin.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 34) PSScriptAnalyzer: [PSAvoidUsingEmptyCatchBlock] Empty catch block is used. Please use Write-Error or throw statements in catch blocks. (Line 21) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Connect-ExchangeAdmin.ps1' (Line )","Connect-ExchangeAdmin","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 16: Write-Host \"\uD83D\uDD10 Already connected as: $upnString\" -ForegroundColor Green; Line 34: Write-Host \"\uD83D\uDD10 Connected as: $upn\" -ForegroundColor Green","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-Graph.ps1","p":["$PSScriptRoot/Global-ErrorHandling.ps1, Microsoft.Graph","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/Global-ErrorHandling.ps1, Microsoft.Graph Use Write-Output/Write-Verbose instead of Write-Host: Line 11: Write-Host \uD83D\uDD10 Already connected to Microsoft Graph as: $($ctx.Account) -ForegroundColor Green; Line 23: Write-Host \uD83D\uDD10 Connected to Microsoft Graph as: $($ctx.Account) -ForegroundColor Green Functions missing help comments: Connect-Graph Unused functions: Connect-Graph No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingEmptyCatchBlock] Empty catch block is used. Please use Write-Error or throw statements in catch blocks. (Line 15) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Connect-Graph.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 11) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Connect-Graph.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 23) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Connect-Graph.ps1' (Line )","Connect-Graph","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 11: Write-Host \"\uD83D\uDD10 Already connected to Microsoft Graph as: $($ctx.Account)\" -ForegroundColor Green; Line 23: Write-Host \"\uD83D\uDD10 Connected to Microsoft Graph as: $($ctx.Account)\" -ForegroundColor Green","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-Teams.ps1","p":["$PSScriptRoot/Global-ErrorHandling.ps1, MicrosoftTeams","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/Global-ErrorHandling.ps1, MicrosoftTeams Use Write-Output/Write-Verbose instead of Write-Host: Line 10: Write-Host \uD83D\uDD10 Already connected to Microsoft Teams. -ForegroundColor Green; Line 20: Write-Host \uD83D\uDD10 Connected to Microsoft Teams. -ForegroundColor Green Functions missing help comments: Connect-TeamsService Unused functions: Connect-TeamsService No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingEmptyCatchBlock] Empty catch block is used. Please use Write-Error or throw statements in catch blocks. (Line 13) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Connect-Teams.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 10) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Connect-Teams.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 20) PSScriptAnalyzer: [PSUseDeclaredVarsMoreThanAssignments] The variable 'details' is assigned but never used. (Line 9) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Connect-Teams.ps1' (Line )","Connect-TeamsService","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 10: Write-Host \"\uD83D\uDD10 Already connected to Microsoft Teams.\" -ForegroundColor Green; Line 20: Write-Host \"\uD83D\uDD10 Connected to Microsoft Teams.\" -ForegroundColor Green","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Get-StandardDeskName.ps1","p":["$PSScriptRoot/Global-ErrorHandling.ps1","1","10","Add or improve header comment. Move param block above error handler. Add Write-Log calls for key actions. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/Global-ErrorHandling.ps1 Add parameter validation attributes: Line 11: [Parameter(Mandatory)][string]$SiteCode,; Line 12: [Parameter(Mandatory)][string]$Building,; Line 13: [Parameter(Mandatory)][string]$Floor,; Line 14: [Parameter(Mandatory)][int]$DeskNumber Functions missing help comments: Get-StandardDeskName Unused functions: Get-StandardDeskName No corresponding .Tests.ps1 file found.","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Get-StandardDeskName","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 11: [Parameter(Mandatory)][string]$SiteCode,; Line 12: [Parameter(Mandatory)][string]$Building,; Line 13: [Parameter(Mandatory)][string]$Floor,; Line 14: [Parameter(Mandatory)][int]$DeskNumber","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Global-ErrorHandling.ps1","p":["$PSScriptRoot\\Write-Log.ps1","Deep Nesting","Dot-source Global-ErrorHandling.ps1 after param block. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot\\Write-Log.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 21: Write-Host `n⚠️ Non-fatal error in ${scriptName}: $($_.Exception.Message) -ForegroundColor Yellow No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidGlobalVars] Found global variable 'Global:OSM_ErrorTrapLoaded'. (Line 14) PSScriptAnalyzer: [PSAvoidGlobalVars] Found global variable 'Global:OSM_ErrorTrapLoaded'. (Line 15) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Global-ErrorHandling.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 21) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Global-ErrorHandling.ps1' (Line )","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 21: Write-Host \"`n⚠️ Non-fatal error in $: (_.Exception.Message)\" -ForegroundColor Yellow","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1","p":["9","Deep Nesting","Dot-source Global-ErrorHandling.ps1 after param block. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. Use Write-Output/Write-Verbose instead of Write-Host: Line 43: Write-Host $prefix $line -ForegroundColor $color Add parameter validation attributes: Line 10: [Parameter(Mandatory)] Functions missing help comments: Write-Log Unused functions: Write-Log No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Write-Log.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 43) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Write-Log.ps1' (Line ) PSScriptAnalyzer: [PSAvoidOverwritingBuiltInCmdlets] 'Write-Log' is a cmdlet that is included with PowerShell (version core-6.1.0-windows) whose definition should not be overridden (Line 8)","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 10: [Parameter(Mandatory)]","Line 43: Write-Host \"$prefix $line\" -ForegroundColor $color","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\Export-SiteStructureTemplates.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 37: Write-Host `n\uD83D\uDCC1 Templates exported to $folder Functions missing help comments: Export-SiteStructureTemplates Unused functions: Export-SiteStructureTemplates No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Export-SiteStructureTemplates.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 37) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Export-SiteStructureTemplates' uses a plural noun. A singular noun should be used instead. (Line 2) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Export-SiteStructureTemplates.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","Export-SiteStructureTemplates","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 37: Write-Host \"`n\uD83D\uDCC1 Templates exported to $folder\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\Import-SiteStructureFromCSV.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 19: Write-Host ✅ Imported Sites; Line 48: Write-Host ✅ Imported Buildings and Floors Functions missing help comments: Import-SiteStructureFromCSV Unused functions: Import-SiteStructureFromCSV No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Import-SiteStructureFromCSV.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 19) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Import-SiteStructureFromCSV.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 48) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Import-SiteStructureFromCSV.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Import-SiteStructureFromCSV","Input Validation","Line 19: Write-Host \"✅ Imported Sites\"; Line 48: Write-Host \"✅ Imported Buildings and Floors\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\List-SiteStructure.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add Write-Log calls for key actions. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 9: Write-Host `n\uD83D\uDCCD Site: $($site.SiteCode) - $($site.SiteName) -ForegroundColor Cyan; Line 13: Write-Host \uD83C\uDFE2 Building: $($b.BuildingCode) - $($b.BuildingName) -ForegroundColor Yellow; Line 15: Write-Host ▸ Floor $($floor.FloorNumber): $($floor.FloorName) -ForegroundColor Gray Functions missing help comments: List-SiteStructure Unused functions: List-SiteStructure No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'List-SiteStructure.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 9) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'List-SiteStructure.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 13) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'List-SiteStructure.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 15) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'List-SiteStructure' uses an unapproved verb. (Line 2) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'List-SiteStructure.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 9: Write-Host \"`n\uD83D\uDCCD Site: $($site.SiteCode) - $($site.SiteName)\" -ForegroundColor Cyan; Line 13: Write-Host \" \uD83C\uDFE2 Building: $($b.BuildingCode) - $($b.BuildingName)\" -ForegroundColor Yellow; Line 15: Write-Host \" ▸ Floor $($floor.FloorNumber): $($floor.FloorName)\" -ForegroundColor Gray","List-SiteStructure","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\Sync-MetadataToCloud.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add Write-Log calls for key actions. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 6: Write-Host Microsoft Places currently does not provide full Graph API write support for sites/buildings/floors.; Line 8: Write-Host `nℹ️ Keep track of Places API features here:; Line 9: Write-Host https://learn.microsoft.com/en-us/microsoftplaces/ -ForegroundColor Blue Functions missing help comments: Sync-MetadataToCloud Unused functions: Sync-MetadataToCloud No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Sync-MetadataToCloud.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 6) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Sync-MetadataToCloud.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 8) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Sync-MetadataToCloud.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 9) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Sync-MetadataToCloud.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 6: Write-Host \"Microsoft Places currently does not provide full Graph API write support for sites/buildings/floors.\"; Line 8: Write-Host \"`nℹ️ Keep track of Places API features here:\"; Line 9: Write-Host \" https://learn.microsoft.com/en-us/microsoftplaces/\"-ForegroundColor Blue","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","Sync-MetadataToCloud","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1","p":["$PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","13","9","Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 41: Write-Host \uD83D\uDD52 Metadata was last refreshed $([int]$minutesOld) minutes ago. -ForegroundColor Yellow; Line 44: Write-Host ⏭️ Skipping metadata refresh. -ForegroundColor Yellow; Line 70: Write-Host `n\uD83D\uDCE5 Fetching Room and Equipment Mailboxes...; Line 112: Write-Host `n✅ Cached resource metadata updated. -ForegroundColor Green; Line 116: Write-Host `n\uD83D\uDFE1 No changes detected in metadata. Skipping write. No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Refresh-CachedResources.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 41) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Refresh-CachedResources.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 44) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Refresh-CachedResources.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 70) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Refresh-CachedResources.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 112) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Refresh-CachedResources.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 116) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Refresh-CachedResources.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 41: Write-Host \"\uD83D\uDD52 Metadata was last refreshed $([int]$minutesOld) minutes ago.\" -ForegroundColor Yellow; Line 44: Write-Host \"⏭️ Skipping metadata refresh.\" -ForegroundColor Yellow; Line 70: Write-Host \" n\uD83D\uDCE5 Fetching Room and Equipment Mailboxes...; Line 112: Write-Host n✅ Cached resource metadata updated.\" -ForegroundColor Green; Line 116: Write-Host \"`n\uD83D\uDFE1 No changes detected in metadata. Skipping write.\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TemplateManagement\\Export-AllTemplates.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add or improve header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 121: Write-Host `n✅ All templates exported to: $folder -ForegroundColor Green Long functions (consider refactoring): Export-AllTemplates (117 lines) Functions missing help comments: Export-AllTemplates Unused functions: Export-AllTemplates No corresponding .Tests.ps1 file found. Slow cmdlets in loops: Line 17: $tenantConfig = Get-Content $tenantConfigPath | ConvertFrom-Json; Line 29: $desks = Get-Content .\\Metadata\\DeskDefinitions.json -Raw | ConvertFrom-Json; Line 54: $pools = Get-Content .\\Metadata\\DeskPools.json -Raw | ConvertFrom-Json; Line 70: $sites = Get-Content .\\Metadata\\SiteDefinitions.json -Raw | ConvertFrom-Json; Line 83: $buildings = Get-Content .\\Metadata\\BuildingDefinitions.json -Raw | ConvertFrom-Json; Line 103: if (!(Test-Path $equipmentFile) -or ((Get-Content $equipmentFile | ConvertFrom-Json).Count -eq 0)) { PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Export-AllTemplates.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 121) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Export-AllTemplates.ps1' (Line ) PSScriptAnalyzer: [PSUseDeclaredVarsMoreThanAssignments] The variable 'domainHint' is assigned but never used. (Line 19) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Export-AllTemplates' uses a plural noun. A singular noun should be used instead. (Line 8)","ConvertFrom-Json; Line 103: if (!(Test-Path $equipmentFile) -or ((Get-Content $equipmentFile","ConvertFrom-Json; Line 29: $desks = Get-Content \".\\Metadata\\DeskDefinitions.json\" -Raw","ConvertFrom-Json; Line 54: $pools = Get-Content \".\\Metadata\\DeskPools.json\" -Raw","ConvertFrom-Json; Line 70: $sites = Get-Content \".\\Metadata\\SiteDefinitions.json\" -Raw","ConvertFrom-Json; Line 83: $buildings = Get-Content \".\\Metadata\\BuildingDefinitions.json\" -Raw","ConvertFrom-Json).Count -eq 0)) {","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","Export-AllTemplates","Export-AllTemplates (117 lines)","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 121: Write-Host \"`n✅ All templates exported to: $folder\" -ForegroundColor Green","Line 17: $tenantConfig = Get-Content $tenantConfigPath","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TemplateManagement\\Export-MetadataTemplates.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 24: Write-Host `n✅ Templates exported to: $exportFolder Functions missing help comments: Export-MetadataTemplates Unused functions: Export-MetadataTemplates No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Export-MetadataTemplates.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 24) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Export-MetadataTemplates.ps1' (Line ) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Export-MetadataTemplates' uses a plural noun. A singular noun should be used instead. (Line 2)","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","Export-MetadataTemplates","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 24: Write-Host \"`n✅ Templates exported to: $exportFolder\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TemplateManagement\\Import-FromCSV.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1","1","Add or improve header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 54: Write-Host \uD83D\uDD01 Updating site: $($row.SiteCode); Line 57: Write-Host ➕ Adding site: $($row.SiteCode) No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Import-FromCSV.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 54) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Import-FromCSV.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 57) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Import-FromCSV.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 54: Write-Host \"\uD83D\uDD01 Updating site: $($row.SiteCode)\"; Line 57: Write-Host \"➕ Adding site: $($row.SiteCode)\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TemplateManagement\\Import-MetadataFromCSV.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 24: Write-Host ✅ Imported Pathways from CSV.; Line 30: Write-Host ✅ Imported Desk Roles from CSV. Functions missing help comments: Import-MetadataFromCSV Unused functions: Import-MetadataFromCSV No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Import-MetadataFromCSV.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 24) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Import-MetadataFromCSV.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 30) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Import-MetadataFromCSV.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Import-MetadataFromCSV","Input Validation","Line 24: Write-Host \"✅ Imported Pathways from CSV.\"; Line 30: Write-Host \"✅ Imported Desk Roles from CSV.\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TemplateManagement\\Validate-CSVImport.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1","1","Add or improve header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 24: Write-Host `n\uD83D\uDCC1 Available CSV files in .\\Imports: -ForegroundColor Cyan; Line 74: Write-Host `n❌ Cannot proceed until required fields are present. -ForegroundColor Red; Line 79: Write-Host `n\uD83D\uDD0D Previewing sample rows... -ForegroundColor Cyan; Line 95: Write-Host `n⚠️ Found $($invalidRows.Count) data issues: -ForegroundColor Yellow; Line 96: $invalidRows | Select-Object -First 10 | ForEach-Object { Write-Host $_ }; Line 98: Write-Host ...and $($invalidRows.Count - 10) more issues not shown; Line 102: Write-Host `n✅ All rows passed structure validation. -ForegroundColor Green No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-CSVImport.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 24) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-CSVImport.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 74) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-CSVImport.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 79) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-CSVImport.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 95) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-CSVImport.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 96) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-CSVImport.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 98) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-CSVImport.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 102) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Validate-CSVImport.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","ForEach-Object { Write-Host $_}; Line 98: Write-Host \"...and $($invalidRows.Count - 10) more issues not shown\"; Line 102: Write-Host \"`n✅ All rows passed structure validation.\" -ForegroundColor Green","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 24: Write-Host \" n\uD83D\uDCC1 Available CSV files in .\\Imports: -ForegroundColor Cyan; Line 74: Write-Host n❌ Cannot proceed until required fields are present.\" -ForegroundColor Red; Line 79: Write-Host \" n\uD83D\uDD0D Previewing sample rows... -ForegroundColor Cyan; Line 95: Write-Host n⚠️ Found $($invalidRows.Count) data issues:\" -ForegroundColor Yellow; Line 96: $invalidRows","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Select-Object -First 10","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Cleanup-TestResources.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","2","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 15: Write-Host Ã¢Å“â€¦ No test mailboxes found.; Line 20: Write-Host Ã°Å¸Â§Â¹ Removing test mailbox: $($mb.Alias); Line 32: Write-Host Ã¢Å“â€¦ Cleanup complete. Functions missing help comments: Cleanup-TestResources Unused functions: Cleanup-TestResources No corresponding .Tests.ps1 file found. Slow cmdlets in loops: Line 27: $desks = Get-Content $metaPath | ConvertFrom-Json PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Cleanup-TestResources.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 15) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Cleanup-TestResources' uses an unapproved verb. (Line 10) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Cleanup-TestResources' uses a plural noun. A singular noun should be used instead. (Line 10) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Cleanup-TestResources.ps1' (Line )","Cleanup-TestResources","ConvertFrom-Json","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 15: Write-Host \"Ã¢Å“â€¦ No test mailboxes found.\"; Line 20: Write-Host \"Ã°Å¸Â§Â¹ Removing test mailbox: $($mb.Alias)\"; Line 32: Write-Host \"Ã¢Å“â€¦ Cleanup complete.\"","Line 27: $desks = Get-Content $metaPath","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Run-BookingSimulation.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","1","Add or improve header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 23: Write-Host `nÃ°Å¸â€œâ€¦ Simulating booking test for: $upn -ForegroundColor Cyan; Line 38: Write-Host Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Mailbox exists and is reachable. -ForegroundColor Green; Line 45: Write-Host Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Calendar processing is set to AutoAccept. -ForegroundColor Green; Line 53: Write-Host `nÃ°Å¸â€œÂ¬ Running mail flow test... -ForegroundColor Cyan; Line 58: Write-Host Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Mail flow is working. -ForegroundColor Green; Line 73: Write-Host `nÃ°Å¸â€œÅ Simulation Summary:`n -ForegroundColor Cyan No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-BookingSimulation.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 23) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-BookingSimulation.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 38) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-BookingSimulation.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 53) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-BookingSimulation.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 58) PSScriptAnalyzer: [PSUseDeclaredVarsMoreThanAssignments] The variable 'mailbox' is assigned but never used. (Line 36) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Run-BookingSimulation.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 23: Write-Host \" nÃ°Å¸â€œâ€¦ Simulating booking test for: $upn -ForegroundColor Cyan; Line 38: Write-Host Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Mailbox exists and is reachable. -ForegroundColor Green; Line 45: Write-Host Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Calendar processing is set to AutoAccept. -ForegroundColor Green; Line 53: Write-Host nÃ°Å¸â€œÂ¬ Running mail flow test...\" -ForegroundColor Cyan; Line 58: Write-Host \"Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Mail flow is working.\" -ForegroundColor Green; Line 73: Write-Host \" nÃ°Å¸â€œÅ Simulation Summary: n\" -ForegroundColor Cyan","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Run-TestSuite.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1, $PSScriptRoot\\Test-DeskProvisioning.ps1, $PSScriptRoot\\Test-RoomProvisioning.ps1, $PSScriptRoot\\Test-MailboxSettings.ps1","2","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add Write-Log calls for key actions. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1, $PSScriptRoot\\Test-DeskProvisioning.ps1, $PSScriptRoot\\Test-RoomProvisioning.ps1, $PSScriptRoot\\Test-MailboxSettings.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 18: Write-Host Logging test results to: $logFile`n; Line 24: Write-Host `nÃ¢Å“â€¦ Test Suite Completed. Review log at: $logFile Functions missing help comments: Run-TestSuite Unused functions: Run-TestSuite No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-TestSuite.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 18) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-TestSuite.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 24) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Run-TestSuite' uses an unapproved verb. (Line 10) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Run-TestSuite.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 18: Write-Host \"Logging test results to: $logFile n; Line 24: Write-Host nÃ¢Å“â€¦ Test Suite Completed. Review log at: $logFile\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Run-TestSuite","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Simulate-BookingTest.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","2","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add Write-Log calls for key actions. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 30: Write-Host Ã°Å¸â€œâ€¦ Simulating booking for $upn...; Line 35: Write-Host Ã¢Å“â€¦ Test booking sent. -ForegroundColor Green No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Simulate-BookingTest.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 30) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Simulate-BookingTest.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 35) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Simulate-BookingTest.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 30: Write-Host \"Ã°Å¸â€œâ€¦ Simulating booking for $upn...\"; Line 35: Write-Host \"Ã¢Å“â€¦ Test booking sent.\" -ForegroundColor Green","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Test-DeskProvisioning.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","2","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 21: Write-Host Ã°Å¸â€\u009DÂ§ Creating test desk resource: $displayName; Line 30: Write-Host Ã¢Å“â€¦ Desk created and configured. Functions missing help comments: Test-DeskProvisioning Unused functions: Test-DeskProvisioning No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Test-DeskProvisioning.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 21) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Test-DeskProvisioning.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 30) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Test-DeskProvisioning.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 21: Write-Host \"Ã°Å¸â€\u009DÂ§ Creating test desk resource: $displayName\"; Line 30: Write-Host \"Ã¢Å“â€¦ Desk created and configured.\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","Test-DeskProvisioning","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Test-MailboxSettings.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","2","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 17: Write-Host Ã°Å¸â€\u009DÂ\u008D $($mb.Alias) - AutoAccept: $($cp.AutomateProcessing) Functions missing help comments: Test-MailboxSettings Unused functions: Test-MailboxSettings No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Test-MailboxSettings.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 17) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Test-MailboxSettings.ps1' (Line ) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Test-MailboxSettings' uses a plural noun. A singular noun should be used instead. (Line 10)","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 17: Write-Host \"Ã°Å¸â€\u009DÂ\u008D $($mb.Alias) - AutoAccept: $($cp.AutomateProcessing)\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","Test-MailboxSettings","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Test-RoomProvisioning.ps1","p":["$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","2","Add or improve header comment. Add .SYNOPSIS to header comment. Add .DESCRIPTION to header comment. Add input validation for user/script input. Add Write-Verbose or Write-Debug for detailed output. Consider supporting -WhatIf or -DryRun for safe testing. External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 21: Write-Host Ã°Å¸Â\u008Fâ€”Ã¯Â¸Â\u008F Creating test room resource: $displayName Functions missing help comments: Test-RoomProvisioning Unused functions: Test-RoomProvisioning No corresponding .Tests.ps1 file found. PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Test-RoomProvisioning.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information. (Line 21) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Test-RoomProvisioning.ps1' (Line )","Deep Nesting","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","False","Hardcoded Secrets","Has Test File","Header Comment","Input Validation","Line 21: Write-Host \"Ã°Å¸Â\u008Fâ€”Ã¯Â¸Â\u008F Creating test room resource: $displayName\"","Long Functions","Missing Function Help","Param Block","Param Line","Param Validation","Property","Risky Commands","Slow Cmdlets in Loops","Suggestions/Issues:","Test-RoomProvisioning","True","Unused Functions","Unused Imports","Unused Parameters","Value","Verbose/Debug","WhatIf/DryRun","Write-Host Usage","Write-Log"]}],[{"l":"CommonInstructions.instructions.backup 2025 07 24"}],[{"l":"CommonInstructions.instructions.backup 2025 07 24 part1"}],[{"l":"Bug Report: False Positive Variable Reference Error for Colon After Variable in Double-Quoted Strings (Format Operator and Concatenation)"},{"l":"Summary"},{"l":"Problem","p":["A false positive diagnostic is reported by the VS Code PowerShell extension (and PSScriptAnalyzer) when a variable is followed by a colon in a double-quoted string, even when using the format operator (-f) or string concatenation. This is valid PowerShell syntax, but the extension reports:"]},{"l":"Expected Behavior","p":["No error or warning should be reported by the PowerShell extension or PSScriptAnalyzer for valid PowerShell syntax using the format operator or string concatenation, regardless of the character following the variable."]},{"l":"Actual Behavior","p":["The extension reports the above error in the Problems panel, even though the code is valid and runs without issue in standalone PowerShell."]},{"l":"Troubleshooting Steps Taken","p":["Verified extension and VS Code are up to date.","Confirmed issue does not reproduce in standalone PowerShell (outside VS Code).","Searched for similar issues in the repo (none found).","Read the troubleshooting guide."]},{"l":"Additional Context","p":["This issue also appears in the PSScriptAnalyzer linter, which is integrated into the VS Code PowerShell extension for diagnostics. Please coordinate with the PSScriptAnalyzer maintainers if needed."]},{"l":"Prerequisites","p":["I have searched all open and closed issues to ensure it has not already been reported.","I have read the troubleshooting guide.","I am sure this issue is with the extension itself and does not reproduce in a standalone PowerShell instance.","I have verified that I am using the latest version of Visual Studio Code and the PowerShell extension."]},{"l":"Environment","p":["VS Code Version:","PowerShell Extension Version:","Operating System: Windows 10.0.19045","PowerShell Version:","PowerShell Host:","PSScriptAnalyzer Version:"]},{"l":"Steps to Reproduce","p":["Open a PowerShell script in VS Code with the following code:","Save the file and observe the diagnostics reported by the PowerShell extension."]},{"l":"Screenshots or Recording","p":["If possible, attach a screenshot or screen recording showing the error in the VS Code Problems panel."]},{"l":"Log Output"},{"l":"Error Details","p":["No unexpected error thrown; this is a linter false positive."]},{"l":"Additional Information","p":["Workspace type: PowerShell 7+ modular project","Example file: Configuration.psm1","Example line: Write-Log -Message ('Failed to enable {0}: {1}' -f $feature, $errorMsg) -Level 'ERROR'"]}],[{"l":"Retype VS Code Snippet Expansion Draft (with Documentation Links)","p":["This document proposes new and improved VS Code snippets for Retype documentation authoring, with inline comments referencing the relevant Retype documentation for each option. All snippets are formatted for direct use in your .code-snippets file."]},{"l":"Retype Page Front Matter"},{"l":"Retype Folder Front Matter"},{"l":"Retype Callout Block"},{"l":"Retype Tabs Block"},{"l":"Retype Panel Block"},{"l":"Retype Embed Block"},{"l":"Retype Reference Link"},{"l":"Retype Image Block"},{"l":"GitHub Markdown Callout"},{"l":"Retype Table Block"},{"l":"Retype Footnote"},{"l":"Retype Definition List"},{"l":"Retype Task List"},{"l":"Retype Horizontal Rule"},{"l":"Retype Code Block","p":["Reference:","Retype Documentation"]}],[{"l":"Title","p":["False Positive: Variable Reference Error for Colon After Variable in Double-Quoted Strings (Format Operator and Concatenation)","Before submitting a bug report:","I have reproduced this on the latest released version of PSScriptAnalyzer and VS Code PowerShell extension.","I have searched for existing issues and did not find this bug reported."]},{"l":"Steps to reproduce"},{"l":"Expected behavior"},{"l":"Actual behavior"},{"l":"If an unexpected error was thrown then please report the full error details using e.g. $error[0] | Select-Object *","p":["No unexpected error thrown; this is a linter false positive."]},{"l":"Environment data","p":["Additional context: This issue also appears in the VS Code PowerShell extension, which integrates PSScriptAnalyzer for diagnostics. Please coordinate with the extension maintainers if needed."]}],[{"l":"PowerShell Script Review Report"},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Invoke-MainMenu.ps1","p":[";",".","(Line 122) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host","(Line 133) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host","(Line 158) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host","(Line 159) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host","(Line 160) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host","(Line 161) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host","(Line 162) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host","(Line 163) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host","(Line 175) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host","(Line 18) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host","(Line 181) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host","(Line 190) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host","(Line 191) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host","(Line 200) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Invoke-MainMenu.ps1' (Line )","(Line 23) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host","(Line 43) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host","(Line 60) PSScriptAnalyzer: [PSAvoidGlobalVars] Found global variable 'Global:LogFile'","(Line 62) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Invoke-MainMenu.ps1' uses Write-Host","$PSScriptRoot/Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Run-FirstTimeSetup.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Show-ActionHistory.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Render-PanelHeader.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Create-ConfigBackup.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1","11","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Cache refreshed","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Run-FirstTimeSetup.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Show-ActionHistory.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Render-PanelHeader.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Create-ConfigBackup.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 18: Write-Host \"Launching in PowerShell 7...\"","Goodbye!\" -ForegroundColor Green No corresponding .Tests.ps1 file found","Header Comment","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 122: Write-Host \"\uD83D\uDD52 Last metadata sync was just $minutesOld minutes ago.\"","Line 133: Write-Host \"⏩ Skipping sync and using recent cached data.\"","Line 158: Write-Host \"[1] Manage Resources\"","Line 159: Write-Host \"[2] Orphan & Metadata Management\"","Line 160: Write-Host \"[3] Configuration & Setup\"","Line 161: Write-Host \"[4] Metadata & Logs\"","Line 162: Write-Host \"[5] Run First-Time Setup Wizard\"","Line 163: Write-Host \"[6] Exit\"","Line 175: Write-Host \"`nExiting...\" -ForegroundColor Cyan","Line 18: Write-Host \"Launching in PowerShell 7...\"; Line 23: Write-Host \"Please install PowerShell 7: https://learn.microsoft.com/powershell/scripting/install/installing-powershell\"; Line 43: Write-Host \"Installed $mod successfully.\" -ForegroundColor Green; Line 122: Write-Host \"\uD83D\uDD52 Last metadata sync was just $minutesOld minutes ago.\"; Line 133: Write-Host \"⏩ Skipping sync and using recent cached data.\"; Line 158: Write-Host \"[1] Manage Resources\"; Line 159: Write-Host \"[2] Orphan & Metadata Management\"; Line 160: Write-Host \"[3] Configuration & Setup\"; Line 161: Write-Host \"[4] Metadata & Logs\"; Line 162: Write-Host \"[5] Run First-Time Setup Wizard\"; Line 163: Write-Host \"[6] Exit\"; Line 175: Write-Host \" nExiting... -ForegroundColor Cyan;br / Line 181: Write-Host Invalid option. -ForegroundColor Yellow;br / Line 190: Write-Host nâ\u009DŒ A critical error occurred while running the CLI:\" -ForegroundColor Red; Line 191: Write-Host $_.Exception.Message -ForegroundColor Yellow; Line 200: Write-Host \"`nSession ended. Cache refreshed. Goodbye!\" -ForegroundColor Green","Line 181: Write-Host \"Invalid option.\" -ForegroundColor Yellow","Line 182: Start-Sleep -Seconds 2","Line 182: Start-Sleep -Seconds 2 PSScriptAnalyzer: [PSAvoidGlobalVars] Found global variable 'Global:ActionLog'","Line 182: Start-Sleep -Seconds 2; Line 182: Start-Sleep -Seconds 2; Line 182: Start-Sleep -Seconds 2","Line 190: Write-Host \"`nâ\u009DŒ A critical error occurred while running the CLI:\" -ForegroundColor Red","Line 191: Write-Host $_.Exception.Message -ForegroundColor Yellow","Line 200: Write-Host \"`nSession ended","Line 23: Write-Host \"Please install PowerShell 7: https://learn.microsoft.com/powershell/scripting/install/installing-powershell\"","Line 43: Write-Host \"Installed $mod successfully.\" -ForegroundColor Green","Property","Slow Cmdlets in Loops","Slow cmdlets in loops: Line 182: Start-Sleep -Seconds 2","Suggestions/Issues:","True","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\ConfigurationMenu.ps1","p":[";",".","(Line 10) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host","(Line 11) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host","(Line 18) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host","(Line 19) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host","(Line 20) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host","(Line 30) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host","(Line 31) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host","(Line 32) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host","(Line 33) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host","(Line 4) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host","(Line 46) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'ConfigurationMenu.ps1' (Line )","(Line 5) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host","(Line 6) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host","(Line 7) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host","(Line 8) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host","(Line 9) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1","1","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add or improve header comment","Add Write-Log calls for key actions","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 4: Write-Host \"[1] Import / Export Templates\"","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 10: Write-Host \"[7] Run First-Time Setup Wizard\"","Line 100: Write-Host \"Invalid option.\"\"-ForegroundColor Yellow No corresponding .Tests.ps1 file found","Line 101: Start-Sleep -Seconds 2 PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ConfigurationMenu.ps1' uses Write-Host","Line 11: Write-Host \"[8] Return to Main Menu\"","Line 18: Write-Host \"[1.1] Export All Templates\"","Line 19: Write-Host \"[1.2] Validate Templates\"","Line 20: Write-Host \"[1.3] Import Validated Templates\"","Line 30: Write-Host \"[2.1] Export Site/Building Templates\"","Line 31: Write-Host \"[2.2] Import Site/Building from CSV\"","Line 32: Write-Host \"[2.3] View Current Site/Building Structure\"","Line 33: Write-Host \"[2.4] Return to Previous Menu\"","Line 4: Write-Host \"[1] Import / Export Templates\"; Line 5: Write-Host \"[2] Manage Sites, Buildings & Floors\"; Line 6: Write-Host \"[3] Sync Cloud Resources to Local Metadata\"; Line 7: Write-Host \"[4] Environment Setup & Validation\"; Line 8: Write-Host \"[5] Configuration Backup & Restore\"; Line 9: Write-Host \"[6] Backup & Templates\"; Line 10: Write-Host \"[7] Run First-Time Setup Wizard\"; Line 11: Write-Host \"[8] Return to Main Menu\"; Line 18: Write-Host \"[1.1] Export All Templates\"; Line 19: Write-Host \"[1.2] Validate Templates\"; Line 20: Write-Host \"[1.3] Import Validated Templates\"; Line 30: Write-Host \"[2.1] Export Site/Building Templates\"; Line 31: Write-Host \"[2.2] Import Site/Building from CSV\"; Line 32: Write-Host \"[2.3] View Current Site/Building Structure\"; Line 33: Write-Host \"[2.4] Return to Previous Menu\"; Line 46: Write-Host \"âœ”ï¸\u008F Cached metadata refreshed.\"; Line 50: Write-Host \"[4.1] Enable Microsoft Places Features\"; Line 51: Write-Host \"[4.2] Validate Microsoft Places Configuration\"; Line 52: Write-Host \"[4.3] Validate Exchange Resource Setup\"; Line 53: Write-Host \"[4.4] Update Mailbox Types in Bulk\"; Line 54: Write-Host \"[4.5] Ensure Calendar Processing Settings\"; Line 55: Write-Host \"[4.6] Pin Places App in Teams\"; Line 68: Write-Host \"[5.1] Create Configuration Backup (.zip)\"; Line 69: Write-Host \"[5.2] Restore Configuration from Backup\"; Line 70: Write-Host \"[5.3] Return to Previous Menu\"; Line 77: Write-Host \"Invalid option.\" -ForegroundColor Yellow; Line 83: Write-Host \" [6.1] Export All Templates (CSV)\"; Line 84: Write-Host \" [6.2] Create Backup Archive (ZIP)\"; Line 85: Write-Host \" [6.3] Restore from Backup Archive\"; Line 86: Write-Host \" [6.4] Return to Previous Menu\"; Line 100: Write-Host \"Invalid option.\"\"-ForegroundColor Yellow","Line 46: Write-Host \"âœ”ï¸\u008F Cached metadata refreshed.\"","Line 5: Write-Host \"[2] Manage Sites, Buildings & Floors\"","Line 50: Write-Host \"[4.1] Enable Microsoft Places Features\"","Line 51: Write-Host \"[4.2] Validate Microsoft Places Configuration\"","Line 52: Write-Host \"[4.3] Validate Exchange Resource Setup\"","Line 53: Write-Host \"[4.4] Update Mailbox Types in Bulk\"","Line 54: Write-Host \"[4.5] Ensure Calendar Processing Settings\"","Line 55: Write-Host \"[4.6] Pin Places App in Teams\"","Line 6: Write-Host \"[3] Sync Cloud Resources to Local Metadata\"","Line 68: Write-Host \"[5.1] Create Configuration Backup (.zip)\"","Line 69: Write-Host \"[5.2] Restore Configuration from Backup\"","Line 7: Write-Host \"[4] Environment Setup & Validation\"","Line 70: Write-Host \"[5.3] Return to Previous Menu\"","Line 77: Write-Host \"Invalid option.\" -ForegroundColor Yellow","Line 78: Start-Sleep -Seconds 2; Line 101: Start-Sleep -Seconds 2","Line 8: Write-Host \"[5] Configuration Backup & Restore\"","Line 83: Write-Host \" [6.1] Export All Templates (CSV)\"","Line 84: Write-Host \" [6.2] Create Backup Archive (ZIP)\"","Line 85: Write-Host \" [6.3] Restore from Backup Archive\"","Line 86: Write-Host \" [6.4] Return to Previous Menu\"","Line 9: Write-Host \"[6] Backup & Templates\"","Property","Slow Cmdlets in Loops","Slow cmdlets in loops: Line 78: Start-Sleep -Seconds 2","Suggestions/Issues:","True","Value","Write-Host Usage"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\ManageResourcesMenu.ps1","p":[";",".","(Line 15) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ManageResourcesMenu.ps1' uses Write-Host","(Line 17) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ManageResourcesMenu.ps1' uses Write-Host","(Line 19) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ManageResourcesMenu.ps1' uses Write-Host","(Line 20) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ManageResourcesMenu.ps1' uses Write-Host","(Line 21) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ManageResourcesMenu.ps1' uses Write-Host","(Line 22) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ManageResourcesMenu.ps1' uses Write-Host","(Line 23) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ManageResourcesMenu.ps1' uses Write-Host","(Line 35) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ManageResourcesMenu.ps1' uses Write-Host","(Line 55) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'ManageResourcesMenu.ps1' (Line )","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Wizards\\Manage-ResourceWizard.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Wizards\\Retry-DraftRunner.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Manage\\Toggle-ResourceState.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Run-BookingSimulation.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Wizards\\Create-DeskPoolWizard.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Wizards\\Manage-DeskPools.ps1","1","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add or improve header comment","Add Write-Log calls for key actions","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Wizards\\Manage-ResourceWizard.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Wizards\\Retry-DraftRunner.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Manage\\Toggle-ResourceState.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Run-BookingSimulation.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Wizards\\Create-DeskPoolWizard.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Wizards\\Manage-DeskPools.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 15: Write-Host \"[1] Create or Edit a Resource (Desk / Room / Equipment)\"","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 15: Write-Host \"[1] Create or Edit a Resource (Desk / Room / Equipment)\"; Line 17: Write-Host \"[2] Recover Failed Draft(s)\"; Line 19: Write-Host \"[3] Retire or Reactivate a Resource\"; Line 20: Write-Host \"[4] Run Booking Simulation Test\"; Line 21: Write-Host \"[5] Create Desk Pool\"; Line 22: Write-Host \"[6] Manage Desk Pools\"; Line 23: Write-Host \"[7] Return to Main Menu\"; Line 35: Write-Host \"No drafts available to recover.\" -ForegroundColor Yellow; Line 55: Write-Host \"Invalid option.\" -ForegroundColor Yellow","Line 17: Write-Host \"[2] Recover Failed Draft(s)\"","Line 19: Write-Host \"[3] Retire or Reactivate a Resource\"","Line 20: Write-Host \"[4] Run Booking Simulation Test\"","Line 21: Write-Host \"[5] Create Desk Pool\"","Line 22: Write-Host \"[6] Manage Desk Pools\"","Line 23: Write-Host \"[7] Return to Main Menu\"","Line 35: Write-Host \"No drafts available to recover.\" -ForegroundColor Yellow","Line 36: Start-Sleep -Seconds 2; Line 56: Start-Sleep -Seconds 2","Line 55: Write-Host \"Invalid option.\" -ForegroundColor Yellow No corresponding .Tests.ps1 file found","Line 56: Start-Sleep -Seconds 2 PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'ManageResourcesMenu.ps1' uses Write-Host","Property","Slow Cmdlets in Loops","Slow cmdlets in loops: Line 36: Start-Sleep -Seconds 2","Suggestions/Issues:","True","Value","Write-Host Usage"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\OrphanMetadatamenu.ps1","p":[";",".","(Line 4) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'OrphanMetadatamenu.ps1' uses Write-Host","(Line 5) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'OrphanMetadatamenu.ps1' uses Write-Host","(Line 6) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'OrphanMetadatamenu.ps1' uses Write-Host","(Line 7) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'OrphanMetadatamenu.ps1' uses Write-Host","(Line 8) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'OrphanMetadatamenu.ps1' uses Write-Host","(Line 9)","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add or improve header comment","Add Write-Log calls for key actions","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 4: Write-Host \"[1] Find Orphaned Resources\"","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 4: Write-Host \"[1] Find Orphaned Resources\"; Line 5: Write-Host \"[2] Fix Orphaned Resources\"; Line 6: Write-Host \"[3] Validate Desk Pool Mappings\"; Line 7: Write-Host \"[4] Detect Non-Standard Resource Names\"; Line 8: Write-Host \"[5] Suggest and Apply Renames\"; Line 9: Write-Host \"[6] Return to Main Menu\"","Line 5: Write-Host \"[2] Fix Orphaned Resources\"","Line 6: Write-Host \"[3] Validate Desk Pool Mappings\"","Line 7: Write-Host \"[4] Detect Non-Standard Resource Names\"","Line 8: Write-Host \"[5] Suggest and Apply Renames\"","Line 9: Write-Host \"[6] Return to Main Menu\" No corresponding .Tests.ps1 file found","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'OrphanMetadatamenu.ps1' uses Write-Host","Suggestions/Issues:","True","Value","Write-Host Usage"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Render-PanelHeader.ps1","p":[";",".","(Line 1) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Render-PanelHeader.ps1' (Line )","(Line 14) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Render-PanelHeader.ps1' uses Write-Host","(Line 15) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Render-PanelHeader.ps1' uses Write-Host","(Line 16) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Render-PanelHeader.ps1' uses Write-Host","(Line 17) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Render-PanelHeader.ps1' uses Write-Host","(Line 18) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Render-PanelHeader' uses an unapproved verb","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","2","6","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Log calls for key actions","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 14: Write-Host \"\"","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 14: Write-Host \"\"; Line 15: Write-Host $top -ForegroundColor Cyan; Line 16: Write-Host $middle -ForegroundColor Cyan; Line 17: Write-Host $bottom -ForegroundColor Cyan; Line 18: Write-Host \"\"","Line 15: Write-Host $top -ForegroundColor Cyan","Line 16: Write-Host $middle -ForegroundColor Cyan","Line 17: Write-Host $bottom -ForegroundColor Cyan","Line 18: Write-Host \"\" Functions missing help comments: Render-PanelHeader Unused functions: Render-PanelHeader No corresponding .Tests.ps1 file found","Missing Function Help","Param Block","Param Line","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Render-PanelHeader.ps1' uses Write-Host","Render-PanelHeader","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Show-ActionHistory.ps1","p":[";",".","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Log calls for key actions","Add Write-Verbose or Write-Debug for detailed output","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 7: Write-Host \" n(No log entries found for today.) n\" -ForegroundColor DarkGray","Line 11: $lines = Get-Content $logFile","Line 11: $lines = Get-Content $logFile | Where-Object { $_.Trim() -ne \"\" } PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Show-ActionHistory.ps1' (Line )","Line 13: Write-Host \" n(No log entries found for today.) n\" -ForegroundColor DarkGray","Line 17: Write-Host \"`n╔══════════ Recent Actions ══════════╗\" -ForegroundColor DarkGray","Line 20: Write-Host \"• $_\" -ForegroundColor Gray","Line 23: Write-Host \"╚════════════════════════════════════╝`n\" -ForegroundColor DarkGray Functions missing help comments: Show-ActionHistory Unused functions: Show-ActionHistory No corresponding .Tests.ps1 file found","Line 7: Write-Host \" n(No log entries found for today.) n\" -ForegroundColor DarkGray; Line 13: Write-Host \" n(No log entries found for today.) n\" -ForegroundColor DarkGray; Line 17: Write-Host \" n╔══════════ Recent Actions ══════════╗ -ForegroundColor DarkGray;br / Line 20: Write-Host • $_ -ForegroundColor Gray;br / Line 23: Write-Host ╚════════════════════════════════════╝ n\" -ForegroundColor DarkGray","Missing Function Help","Property","Show-ActionHistory","Slow Cmdlets in Loops","Slow cmdlets in loops: Line 11: $lines = Get-Content $logFile | Where-Object { $_.Trim() -ne \"\" }","Suggestions/Issues:","True","Unused Functions","Value","Where-Object { $_.Trim() -ne \"\" }","Where-Object { $_.Trim() -ne \"\" }; Line 11: $lines = Get-Content $logFile","Write-Host Usage"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Manage\\Toggle-ResourceState.ps1","p":[";",".","(Line 20) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Toggle-ResourceState.ps1' uses Write-Host","(Line 35) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Toggle-ResourceState.ps1' (Line )","(Line 8) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Toggle-ResourceState.ps1' uses Write-Host","$PSScriptRoot/../../Shared/Global-ErrorHandling.ps1","1","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","ConvertFrom-Json","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 8: Write-Host \"❌ Invalid type.\" -ForegroundColor Red","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 20: Write-Host \"⚠ No $resourceType data file found.\" -ForegroundColor Yellow","Line 24: $data = Get-Content $file","Line 35: Write-Host \"✔️ resourceType '($selected.DisplayName)' is now $status.\" -ForegroundColor Cyan No corresponding .Tests.ps1 file found","Line 8: Write-Host \"❌ Invalid type.\" -ForegroundColor Red; Line 20: Write-Host \"⚠ No $resourceType data file found.\" -ForegroundColor Yellow; Line 35: Write-Host \"✔️ resourceType '($selected.DisplayName)' is now $status.\" -ForegroundColor Cyan","Property","Slow Cmdlets in Loops","Slow cmdlets in loops: Line 24: $data = Get-Content $file | ConvertFrom-Json PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Toggle-ResourceState.ps1' uses Write-Host","Suggestions/Issues:","True","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Create-DeskPoolWizard.ps1","p":[";",".","(Line 18) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Create-DeskPoolWizard.ps1' uses Write-Host","(Line 25) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Create-DeskPoolWizard.ps1' uses Write-Host","(Line 47) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Create-DeskPoolWizard.ps1' (Line )","$PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1","1","Add .DESCRIPTION to header comment","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","ConvertFrom-Json","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 18: Write-Host \"No desks available","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 18: Write-Host \"No desks available. Please create desks first.\" -ForegroundColor Yellow; Line 25: Write-Host \"❌ No desks found for site '$siteCode'.\" -ForegroundColor Red; Line 47: Write-Host \"✔️ Desk Pool '$poolName' created with $($selectedDesks.Count) desks.\" -ForegroundColor Green","Line 21: $desks = Get-Content $deskFile","Line 25: Write-Host \"❌ No desks found for site '$siteCode'.\" -ForegroundColor Red","Line 47: Write-Host \"✔️ Desk Pool '$poolName' created with $($selectedDesks.Count) desks.\" -ForegroundColor Green No corresponding .Tests.ps1 file found","Please create desks first.\" -ForegroundColor Yellow","Property","Slow Cmdlets in Loops","Slow cmdlets in loops: Line 21: $desks = Get-Content $deskFile | ConvertFrom-Json PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Create-DeskPoolWizard.ps1' uses Write-Host","Suggestions/Issues:","True","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Manage-DeskPools.ps1","p":[";",".","(Line 19) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-DeskPools.ps1' uses Write-Host","(Line 20) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-DeskPools.ps1' uses Write-Host","(Line 21) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-DeskPools.ps1' uses Write-Host","(Line 22) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-DeskPools.ps1' uses Write-Host","(Line 23) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-DeskPools.ps1' uses Write-Host","(Line 42) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-DeskPools.ps1' uses Write-Host","(Line 54) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Manage-DeskPools.ps1' (Line )","$PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1","1","Add .DESCRIPTION to header comment","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Cancel\"","Consider supporting -WhatIf or -DryRun for safe testing","Delete Pool\"","Edit Assigned Desks\"","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 19: Write-Host \"`nSelected: $($selectedPool.PoolName)\" -ForegroundColor Cyan","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 19: Write-Host \"`nSelected: $($selectedPool.PoolName)\" -ForegroundColor Cyan; Line 20: Write-Host \"1. Rename Pool\"; Line 21: Write-Host \"2. Edit Assigned Desks\"; Line 22: Write-Host \"3. Delete Pool\"; Line 23: Write-Host \"4. Cancel\"; Line 42: Write-Host \"\uD83D\uDDD1 Pool deleted.\" -ForegroundColor Red; Line 54: Write-Host \"✔️ Pool updated.\" -ForegroundColor Green","Line 20: Write-Host \"1","Line 21: Write-Host \"2","Line 22: Write-Host \"3","Line 23: Write-Host \"4","Line 42: Write-Host \"\uD83D\uDDD1 Pool deleted.\" -ForegroundColor Red","Line 54: Write-Host \"✔️ Pool updated.\" -ForegroundColor Green No corresponding .Tests.ps1 file found","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-DeskPools.ps1' uses Write-Host","Rename Pool\"","Suggestions/Issues:","True","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Manage-ResourceWizard.ps1","p":[";",".","(Line 144) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-ResourceWizard.ps1' uses Write-Host","(Line 150) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-ResourceWizard.ps1' uses Write-Host","(Line 18) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-ResourceWizard.ps1' uses Write-Host","(Line 231) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-ResourceWizard.ps1' uses Write-Host","(Line 250) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Manage-ResourceWizard.ps1' (Line )","(Line 76) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-ResourceWizard.ps1' uses Write-Host","$PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Get-StandardDeskName.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Simulate-BookingTest.ps1","1","Add .DESCRIPTION to header comment","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Comparing with local data...\" -ForegroundColor Yellow","Consider supporting -WhatIf or -DryRun for safe testing","ConvertFrom-Json","ConvertFrom-Json; Line 69: $tenantConfig = Get-Content $domainConfig","ConvertTo-SecureString -AsPlainText -Force","Duplicate Functions","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Get-StandardDeskName.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Simulate-BookingTest.ps1 Risky commands: Line 171: $securePwd = (New-SecurePassword) | ConvertTo-SecureString -AsPlainText -Force Use Write-Output/Write-Verbose instead of Write-Host: Line 18: Write-Host \"â\u009DŒ Invalid resource type.\" -ForegroundColor Red","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 144: Write-Host \"`nâš ï¸\u008F Mailbox already exists","Line 150: 'K' { Write-Host \"âœ”ï¸\u008F Keeping existing Exchange mailbox.\" }","Line 171: $securePwd = (New-SecurePassword)","Line 173: Write-Host \"ðŸ› Creating mailbox in Exchange...\"","Line 18: Write-Host \"â\u009DŒ Invalid resource type.\" -ForegroundColor Red; Line 76: Write-Host \"[$($i+1)] $($domains[$i])\"; Line 144: Write-Host \"`nâš ï¸\u008F Mailbox already exists. Comparing with local data...\" -ForegroundColor Yellow; Line 150: 'K' { Write-Host \"âœ”ï¸\u008F Keeping existing Exchange mailbox.\" }; Line 173: Write-Host \"ðŸ› Creating mailbox in Exchange...\"; Line 199: Write-Host \"ðŸ\u008F¢ Microsoft Places configuration applied.\" -ForegroundColor Green; Line 206: Write-Host \"ðŸ’¾ Draft saved to $draftPath for retry.\"; Line 231: Write-Host \"âœ… Simulation test passed for $alias@$domain\" -ForegroundColor Green; Line 250: Write-Host \"â\u009DŒ Resource not provisioned in Exchange. Skipping simulation.\" -ForegroundColor Yellow","Line 199: Write-Host \"ðŸ\u008F¢ Microsoft Places configuration applied.\" -ForegroundColor Green","Line 206: Write-Host \"ðŸ’¾ Draft saved to $draftPath for retry.\"","Line 231: Write-Host \"âœ… Simulation test passed for $alias@$domain\" -ForegroundColor Green","Line 25: $items = Get-Content $resourceFile","Line 250: Write-Host \"â\u009DŒ Resource not provisioned in Exchange","Line 69: $tenantConfig = Get-Content $domainConfig | ConvertFrom-Json PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Manage-ResourceWizard.ps1' uses Write-Host","Line 76: Write-Host \"[$($i+1)] $($domains[$i])\"","Missing Function Help","New-SecurePassword","New-SecurePassword (also in C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Manage-ResourceWizard.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Retry-DraftRunner.ps1)","Property","Risky Commands","Skipping simulation.\" -ForegroundColor Yellow Duplicate function names: New-SecurePassword (also in C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Manage-ResourceWizard.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Retry-DraftRunner.ps1) Functions missing help comments: New-SecurePassword Unused functions: New-SecurePassword No corresponding .Tests.ps1 file found","Slow Cmdlets in Loops","Slow cmdlets in loops: Line 25: $items = Get-Content $resourceFile | ConvertFrom-Json","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Retry-DraftRunner.ps1","p":[";",".","(Line 105) PSScriptAnalyzer: [PSUseShouldProcessForStateChangingFunctions] Function 'New-SecurePassword' has verb that could change system state","(Line 14) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Retry-DraftRunner.ps1' uses Write-Host","(Line 29) PSScriptAnalyzer: [PSUseDeclaredVarsMoreThanAssignments] The variable 'chars' is assigned but never used","(Line 30)","(Line 32) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Retry-DraftRunner.ps1' (Line ) PSScriptAnalyzer: [PSAvoidUsingConvertToSecureStringWithPlainText] File 'Retry-DraftRunner.ps1' uses ConvertTo-SecureString with plaintext","(Line 44) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Retry-DraftRunner.ps1' uses Write-Host","(Line 46) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Retry-DraftRunner.ps1' uses Write-Host","(Line 51) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Retry-DraftRunner.ps1' uses Write-Host","(Line 81) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Retry-DraftRunner.ps1' uses Write-Host","(Line 95) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Retry-DraftRunner.ps1' uses Write-Host","$PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, $PSScriptRoot\\TestSuite\\Simulate-BookingTest.ps1","1","Add or improve header comment","Add Write-Log calls for key actions","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","ConvertFrom-Json","ConvertFrom-Json; Line 87: $existingData = Get-Content $metadataPath","ConvertTo-SecureString -AsPlainText -Force","Duplicate Functions","Encrypted standard strings should be used instead","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, $PSScriptRoot\\TestSuite\\Simulate-BookingTest.ps1 Risky commands: Line 44: $securePwd = (New-SecurePassword) | ConvertTo-SecureString -AsPlainText -Force Use Write-Output/Write-Verbose instead of Write-Host: Line 14: Write-Host \"\uD83C\uDF89 No draft resources found to recover.\" -ForegroundColor Green","If assignment is not by design, please use a different name","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 105: Write-Host \"Draft preserved: $($selected.FullName)\" Duplicate function names: New-SecurePassword (also in C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Manage-ResourceWizard.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Retry-DraftRunner.ps1) Functions missing help comments: New-SecurePassword Unused functions: New-SecurePassword No corresponding .Tests.ps1 file found","Line 14: Write-Host \"\uD83C\uDF89 No draft resources found to recover.\" -ForegroundColor Green; Line 46: Write-Host \"\uD83D\uDCE6 Retrying Exchange provisioning for: $($resource.DisplayName)\" -ForegroundColor Cyan; Line 51: Write-Host \"⚠️ Mailbox already exists in Exchange. Skipping creation.\" -ForegroundColor Yellow; Line 81: Write-Host \"✅ Retry successful. Updating metadata and cleaning up draft...\" -ForegroundColor Green; Line 95: Write-Host \"\uD83E\uDDF9 Draft cleaned up.\"; Line 105: Write-Host \"Draft preserved: $($selected.FullName)\"","Line 22: $resource = Get-Content $selected.FullName","Line 44: $securePwd = (New-SecurePassword)","Line 46: Write-Host \"\uD83D\uDCE6 Retrying Exchange provisioning for: $($resource.DisplayName)\" -ForegroundColor Cyan","Line 51: Write-Host \"⚠️ Mailbox already exists in Exchange","Line 81: Write-Host \"✅ Retry successful","Line 87: $existingData = Get-Content $metadataPath | ConvertFrom-Json PSScriptAnalyzer: [PSAvoidAssignmentToAutomaticVariable] The Variable 'pwd' is an automatic variable that is built into PowerShell, assigning to it might have undesired side effects","Line 95: Write-Host \"\uD83E\uDDF9 Draft cleaned up.\"","Missing Function Help","New-SecurePassword","New-SecurePassword (also in C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Manage-ResourceWizard.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\CLI\\Wizards\\Retry-DraftRunner.ps1)","Property","Risky Commands","Skipping creation.\" -ForegroundColor Yellow","Slow Cmdlets in Loops","Slow cmdlets in loops: Line 22: $resource = Get-Content $selected.FullName | ConvertFrom-Json","Suggestions/Issues:","Therefore, the function has to support 'ShouldProcess'","This will expose secure information","True","Unused Functions","Updating metadata and cleaning up draft...\" -ForegroundColor Green","Value","Write-Host Usage"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Create-ConfigBackup.ps1","p":[".","(Line 2) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Create-ConfigBackup.ps1' (Line )","(Line 37) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Create-ConfigBackup' uses an unapproved verb","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Create-ConfigBackup","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 37: Write-Host \"`n\uD83D\uDCE6 Backup created: $zipPath\" -ForegroundColor Green Functions missing help comments: Create-ConfigBackup Unused functions: Create-ConfigBackup No corresponding .Tests.ps1 file found","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 37: Write-Host \"`n\uD83D\uDCE6 Backup created: $zipPath\" -ForegroundColor Green","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Create-ConfigBackup.ps1' uses Write-Host","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Enable-PlacesFeatures.ps1","p":[";",".","(Line 2)","(Line 3) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Enable-PlacesFeatures.ps1' uses Write-Host","(Line 5) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Enable-PlacesFeatures.ps1' (Line ) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Enable-PlacesFeatures' uses a plural noun","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","A singular noun should be used instead","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Enable-PlacesFeatures","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 3: Write-Host \"✔️ Enabling Microsoft Places features...\"","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 3: Write-Host \"✔️ Enabling Microsoft Places features...\"; Line 5: Write-Host \"✅ Microsoft Places enabled.\"","Line 5: Write-Host \"✅ Microsoft Places enabled.\" Functions missing help comments: Enable-PlacesFeatures Unused functions: Enable-PlacesFeatures No corresponding .Tests.ps1 file found","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Enable-PlacesFeatures.ps1' uses Write-Host","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Restore-ConfigBackup.ps1","p":[";",".","(Line 50) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Restore-ConfigBackup.ps1' uses Write-Host","(Line 56) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Restore-ConfigBackup.ps1' (Line )","(Line 70) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Restore-ConfigBackup.ps1' uses Write-Host","(Line 91) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Try-LoadJson' uses an unapproved verb","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Create-ConfigBackup.ps1","1","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","ConvertFrom-Json -ErrorAction Stop","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Create-ConfigBackup.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 50: $missing | ForEach-Object { Write-Host \" - $_\" -ForegroundColor Yellow }","ForEach-Object { Write-Host \" - $_\" -ForegroundColor Yellow }; Line 70: Write-Host \" nðŸ“‹ Summary of Incoming Metadata: n\" -ForegroundColor Cyan; Line 71: Write-Host \" Desks: $($desks.Count)\"; Line 72: Write-Host \" Desk Pools: $($pools.Count)\"; Line 73: Write-Host \" Sites: $($sites.Count)\"; Line 74: Write-Host \" Buildings: $($buildings.Count)\"; Line 91: Write-Host \"`nâœ… Metadata restored successfully.\" -ForegroundColor Green","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 50: $missing","Line 58: return Get-Content $filePath -Raw","Line 70: Write-Host \" nðŸ“‹ Summary of Incoming Metadata: n\" -ForegroundColor Cyan","Line 71: Write-Host \" Desks: $($desks.Count)\"","Line 72: Write-Host \" Desk Pools: $($pools.Count)\"","Line 73: Write-Host \" Sites: $($sites.Count)\"","Line 74: Write-Host \" Buildings: $($buildings.Count)\"","Line 91: Write-Host \"`nâœ… Metadata restored successfully.\" -ForegroundColor Green Functions missing help comments: Restore-ConfigBackup, Try-LoadJson Unused functions: Restore-ConfigBackup No corresponding .Tests.ps1 file found","Missing Function Help","Property","Restore-ConfigBackup","Restore-ConfigBackup, Try-LoadJson","Slow Cmdlets in Loops","Slow cmdlets in loops: Line 58: return Get-Content $filePath -Raw | ConvertFrom-Json -ErrorAction Stop PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Restore-ConfigBackup.ps1' uses Write-Host","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Run-FirstTimeSetup.ps1","p":[";",".","(Line 10)","(Line 13) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-FirstTimeSetup.ps1' uses Write-Host","(Line 16) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-FirstTimeSetup.ps1' uses Write-Host","(Line 21) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-FirstTimeSetup.ps1' uses Write-Host","(Line 28) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-FirstTimeSetup.ps1' uses Write-Host","(Line 32) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-FirstTimeSetup.ps1' uses Write-Host","(Line 36) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-FirstTimeSetup.ps1' uses Write-Host","(Line 39) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-FirstTimeSetup.ps1' uses Write-Host","(Line 42) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Run-FirstTimeSetup.ps1' (Line ) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Run-FirstTimeSetup' uses an unapproved verb","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Enable-PlacesFeatures.ps1, $PSScriptRoot\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TemplateManagement\\Export-MetadataTemplates.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TemplateManagement\\Export-AllTemplates.ps1","2","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Enable-PlacesFeatures.ps1, $PSScriptRoot\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TemplateManagement\\Export-MetadataTemplates.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TemplateManagement\\Export-AllTemplates.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 13: Write-Host \"Ã°Å¸â€\u009DÂ§ Collecting tenant domain info...\"","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 13: Write-Host \"Ã°Å¸â€\u009DÂ§ Collecting tenant domain info...\"; Line 16: Write-Host \"Detected default domain: $defaultDomain\"; Line 21: Write-Host \" nMicrosoft Places is not enabled.;br / Line 28: Write-Host nÃ°Å¸â€œÂ¥ Syncing cached resources...\"; Line 32: Write-Host \" nWould you like to export editable metadata templates for Pathways and Roles?;br / Line 36: Write-Host nÃ°Å¸â€œÂ¥ You can now populate the CSVs and import them using Configuration > Templates > Import Metadata\"; Line 39: Write-Host \" nÃ°Å¸â€œÂ\u0081 Generating templates...;br / Line 42: Write-Host nÃ¢Å“â€¦ First-Time Setup Complete.\"","Line 16: Write-Host \"Detected default domain: $defaultDomain\"","Line 21: Write-Host \"`nMicrosoft Places is not enabled.\"","Line 28: Write-Host \"`nÃ°Å¸â€œÂ¥ Syncing cached resources...\"","Line 32: Write-Host \"`nWould you like to export editable metadata templates for Pathways and Roles?\"","Line 36: Write-Host \"`nÃ°Å¸â€œÂ¥ You can now populate the CSVs and import them using Configuration > Templates > Import Metadata\"","Line 39: Write-Host \"`nÃ°Å¸â€œÂ\u0081 Generating templates...\"","Line 42: Write-Host \"`nÃ¢Å“â€¦ First-Time Setup Complete.\" Functions missing help comments: Run-FirstTimeSetup Unused functions: Run-FirstTimeSetup No corresponding .Tests.ps1 file found","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-FirstTimeSetup.ps1' uses Write-Host","Run-FirstTimeSetup","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Validate-ExchangeSetup.ps1","p":[".","(Line 10) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Validate-ExchangeSetup.ps1' (Line )","(Line 25) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Validate-ExchangeSetup' uses an unapproved verb","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","2","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 25: Write-Host \"Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Exchange resource validation completed\" Functions missing help comments: Validate-ExchangeSetup Unused functions: Validate-ExchangeSetup No corresponding .Tests.ps1 file found","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 25: Write-Host \"Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Exchange resource validation completed\"","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-ExchangeSetup.ps1' uses Write-Host","Suggestions/Issues:","True","Unused Functions","Validate-ExchangeSetup","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Configuration\\Validate-PlacesFeatures.ps1","p":[";",".","(Line 14) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Validate-PlacesFeatures' uses an unapproved verb","(Line 2) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Validate-PlacesFeatures.ps1' (Line )","(Line 2) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Validate-PlacesFeatures' uses a plural noun","(Line 7) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-PlacesFeatures.ps1' uses Write-Host","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","A singular noun should be used instead","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 7: Write-Host \"✅ Places feature is ENABLED.\"","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 14: Write-Host \"✅ Places App is pinned in Teams.\" Functions missing help comments: Validate-PlacesFeatures Unused functions: Validate-PlacesFeatures No corresponding .Tests.ps1 file found","Line 7: Write-Host \"✅ Places feature is ENABLED.\"; Line 14: Write-Host \"✅ Places App is pinned in Teams.\"","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-PlacesFeatures.ps1' uses Write-Host","Suggestions/Issues:","True","Unused Functions","Validate-PlacesFeatures","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\EnvironmentSetup\\Ensure-CalendarProcessingSettings.ps1","p":[".","(Line 10)","(Line 10) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Ensure-CalendarProcessingSettings' uses a plural noun","(Line 28) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Ensure-CalendarProcessingSettings.ps1' (Line ) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Ensure-CalendarProcessingSettings' uses an unapproved verb","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","2","A singular noun should be used instead","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Ensure-CalendarProcessingSettings","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 28: Write-Host \"Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Calendar processing settings validated\" Functions missing help comments: Ensure-CalendarProcessingSettings Unused functions: Ensure-CalendarProcessingSettings No corresponding .Tests.ps1 file found","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 28: Write-Host \"Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Calendar processing settings validated\"","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Ensure-CalendarProcessingSettings.ps1' uses Write-Host","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\EnvironmentSetup\\Pin-PlacesAppInTeams.ps1","p":[";",".","(Line 10)","(Line 10) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Pin-PlacesAppInTeams' uses an unapproved verb","(Line 17) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Pin-PlacesAppInTeams.ps1' (Line ) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Pin-PlacesAppInTeams' uses a plural noun","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","2","A singular noun should be used instead","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 17: Write-Host \"Ã¢Å“â€¦ Places app already pinned.\"","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 17: Write-Host \"Ã¢Å“â€¦ Places app already pinned.\"; Line 21: Write-Host \"Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Pinned Places app in Teams setup policy.\"","Line 21: Write-Host \"Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Pinned Places app in Teams setup policy.\" Functions missing help comments: Pin-PlacesAppInTeams Unused functions: Pin-PlacesAppInTeams No corresponding .Tests.ps1 file found","Missing Function Help","Pin-PlacesAppInTeams","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Pin-PlacesAppInTeams.ps1' uses Write-Host","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\EnvironmentSetup\\Update-MailboxTypes.ps1","p":[";",".","(Line 10)","(Line 10) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Update-MailboxTypes.ps1' (Line ) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Update-MailboxTypes' uses a plural noun","(Line 30) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Update-MailboxTypes.ps1' uses Write-Host","(Line 34) PSScriptAnalyzer: [PSUseShouldProcessForStateChangingFunctions] Function 'Update-MailboxTypes' has verb that could change system state","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","2","A singular noun should be used instead","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 30: Write-Host \"$alias Ã¢â€ â€™ Suggested Type: $suggestedType (Current: $type)\"","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 30: Write-Host \"$alias Ã¢â€ â€™ Suggested Type: $suggestedType (Current: $type)\"; Line 34: Write-Host \"Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Updated $alias to $suggestedType\"; Line 40: Write-Host \"`nÃ¢Å“â€¦ Mailbox type update complete.\"","Line 34: Write-Host \"Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Updated $alias to $suggestedType\"","Line 40: Write-Host \"`nÃ¢Å“â€¦ Mailbox type update complete.\" Functions missing help comments: Update-MailboxTypes Unused functions: Update-MailboxTypes No corresponding .Tests.ps1 file found","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Update-MailboxTypes.ps1' uses Write-Host","Suggestions/Issues:","Therefore, the function has to support 'ShouldProcess'","True","Unused Functions","Update-MailboxTypes","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\OrphanFixer\\Detect-NonStandardResources.ps1","p":[".","(Line 2)","(Line 2) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Detect-NonStandardResources.ps1' (Line ) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Detect-NonStandardResources' uses a plural noun","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","A singular noun should be used instead","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Consider supporting -WhatIf or -DryRun for safe testing","Detect-NonStandardResources","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Functions missing help comments: Detect-NonStandardResources Unused functions: Detect-NonStandardResources No corresponding .Tests.ps1 file found","Missing Function Help","Property","PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Detect-NonStandardResources' uses an unapproved verb","Suggestions/Issues:","True","Unused Functions","Value","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\OrphanFixer\\Find-OrphanedResources.ps1","p":[";",".","(Line 18) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Find-OrphanedResources.ps1' uses Write-Host","(Line 2)","(Line 20) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Find-OrphanedResources.ps1' uses Write-Host","(Line 23) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Find-OrphanedResources.ps1' uses Write-Host","(Line 25) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Find-OrphanedResources.ps1' (Line ) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Find-OrphanedResources' uses a plural noun","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","A singular noun should be used instead","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 18: Write-Host \"`n\uD83D\uDD0D Orphaned Desks (in Metadata but not Exchange): $($orphansMetadata.Count)\"","Find-OrphanedResources","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 18: Write-Host \" n\uD83D\uDD0D Orphaned Desks (in Metadata but not Exchange): $($orphansMetadata.Count);br / Line 20: Write-Host \uD83D\uDFE1 DeskId: $($_.DeskId) – Missing ExchangeObjectId;br / Line 23: Write-Host n\uD83D\uDD0D Orphaned Mailboxes (Exchange resources not in metadata): $($orphanedMailboxes.Count)\"; Line 25: Write-Host \"\uD83D\uDFE1 (.Alias) – (.DisplayName)\"","Line 20: Write-Host \"\uD83D\uDFE1 DeskId: (_.DeskId) – Missing ExchangeObjectId\"","Line 23: Write-Host \"`n\uD83D\uDD0D Orphaned Mailboxes (Exchange resources not in metadata): $($orphanedMailboxes.Count)\"","Line 25: Write-Host \"\uD83D\uDFE1 (.Alias) – (.DisplayName)\" Functions missing help comments: Find-OrphanedResources Unused functions: Find-OrphanedResources No corresponding .Tests.ps1 file found","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Find-OrphanedResources.ps1' uses Write-Host","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\OrphanFixer\\Fix-OrphanedResources.ps1","p":[";",".","(Line 13) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Fix-OrphanedResources.ps1' uses Write-Host","(Line 18) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Fix-OrphanedResources.ps1' uses Write-Host","(Line 2)","(Line 2) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Fix-OrphanedResources.ps1' (Line ) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Fix-OrphanedResources' uses a plural noun","(Line 38) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Fix-OrphanedResources.ps1' uses Write-Host","(Line 43) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Fix-OrphanedResources' uses an unapproved verb","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","A singular noun should be used instead","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 13: Write-Host \"✅ No orphaned mailboxes to fix.\"","Fix-OrphanedResources","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 13: Write-Host \"✅ No orphaned mailboxes to fix.\"; Line 18: Write-Host \" n\uD83D\uDCEC [$($orphan.Alias)] - $($orphan.DisplayName);br / Line 38: Write-Host ✔️ Added new desk to metadata: $deskId;br / Line 43: Write-Host n✅ Metadata updated with fixed orphans.\"","Line 18: Write-Host \"`n\uD83D\uDCEC [$($orphan.Alias)] - $($orphan.DisplayName)\"","Line 38: Write-Host \"✔️ Added new desk to metadata: $deskId\"","Line 43: Write-Host \"`n✅ Metadata updated with fixed orphans.\" Functions missing help comments: Fix-OrphanedResources Unused functions: Fix-OrphanedResources No corresponding .Tests.ps1 file found","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Fix-OrphanedResources.ps1' uses Write-Host","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\OrphanFixer\\Suggest-RenameResource.ps1","p":[";",".","(Line 15) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Suggest-RenameResource' uses an unapproved verb","(Line 2) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Suggest-RenameResource.ps1' (Line )","(Line 9) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Suggest-RenameResource.ps1' uses Write-Host","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","ConvertFrom-Json","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 9: Write-Host \"`nCurrent Name: $($r.DisplayName)\"","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 15: Write-Host \"✔️ Renamed.\" Functions missing help comments: Suggest-RenameResource Unused functions: Suggest-RenameResource No corresponding .Tests.ps1 file found","Line 5: $cache = Get-Content \".\\Metadata\\CachedResources.json\"","Line 9: Write-Host \"`nCurrent Name: $($r.DisplayName)\"; Line 15: Write-Host \"✔️ Renamed.\"","Missing Function Help","Property","Slow Cmdlets in Loops","Slow cmdlets in loops: Line 5: $cache = Get-Content \".\\Metadata\\CachedResources.json\" | ConvertFrom-Json PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Suggest-RenameResource.ps1' uses Write-Host","Suggest-RenameResource","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\OrphanFixer\\Validate-DeskPoolMappings.ps1","p":[".","(Line 17) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Validate-DeskPoolMappings' uses an unapproved verb","(Line 2)","(Line 2) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Validate-DeskPoolMappings.ps1' (Line ) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Validate-DeskPoolMappings' uses a plural noun","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","A singular noun should be used instead","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 17: Write-Host \"✅ Desk pool mapping validation complete.\" Functions missing help comments: Validate-DeskPoolMappings Unused functions: Validate-DeskPoolMappings No corresponding .Tests.ps1 file found","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 17: Write-Host \"✅ Desk pool mapping validation complete.\"","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-DeskPoolMappings.ps1' uses Write-Host","Suggestions/Issues:","True","Unused Functions","Validate-DeskPoolMappings","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","p":[";",".","(Line 16) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Connect-ExchangeAdmin.ps1' uses Write-Host","(Line 21) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Connect-ExchangeAdmin.ps1' uses Write-Host","(Line 34) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Connect-ExchangeAdmin.ps1' (Line )","$PSScriptRoot/Global-ErrorHandling.ps1, ExchangeOnlineManagement","1","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Connect-ExchangeAdmin","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/Global-ErrorHandling.ps1, ExchangeOnlineManagement Use Write-Output/Write-Verbose instead of Write-Host: Line 16: Write-Host \"\uD83D\uDD10 Already connected as: $upnString\" -ForegroundColor Green","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 16: Write-Host \"\uD83D\uDD10 Already connected as: $upnString\" -ForegroundColor Green; Line 34: Write-Host \"\uD83D\uDD10 Connected as: $upn\" -ForegroundColor Green","Line 34: Write-Host \"\uD83D\uDD10 Connected as: $upn\" -ForegroundColor Green Functions missing help comments: Connect-ExchangeAdmin Unused functions: Connect-ExchangeAdmin No corresponding .Tests.ps1 file found","Missing Function Help","Please use Write-Error or throw statements in catch blocks","Property","PSScriptAnalyzer: [PSAvoidUsingEmptyCatchBlock] Empty catch block is used","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-Graph.ps1","p":[";",".","(Line 11) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Connect-Graph.ps1' uses Write-Host","(Line 15) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Connect-Graph.ps1' uses Write-Host","(Line 23) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Connect-Graph.ps1' (Line )","$PSScriptRoot/Global-ErrorHandling.ps1, Microsoft.Graph","1","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Connect-Graph","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/Global-ErrorHandling.ps1, Microsoft.Graph Use Write-Output/Write-Verbose instead of Write-Host: Line 11: Write-Host \"\uD83D\uDD10 Already connected to Microsoft Graph as: $($ctx.Account)\" -ForegroundColor Green","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 11: Write-Host \"\uD83D\uDD10 Already connected to Microsoft Graph as: $($ctx.Account)\" -ForegroundColor Green; Line 23: Write-Host \"\uD83D\uDD10 Connected to Microsoft Graph as: $($ctx.Account)\" -ForegroundColor Green","Line 23: Write-Host \"\uD83D\uDD10 Connected to Microsoft Graph as: $($ctx.Account)\" -ForegroundColor Green Functions missing help comments: Connect-Graph Unused functions: Connect-Graph No corresponding .Tests.ps1 file found","Missing Function Help","Please use Write-Error or throw statements in catch blocks","Property","PSScriptAnalyzer: [PSAvoidUsingEmptyCatchBlock] Empty catch block is used","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-Teams.ps1","p":[";",".","(Line 10) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Connect-Teams.ps1' uses Write-Host","(Line 13) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Connect-Teams.ps1' uses Write-Host","(Line 20) PSScriptAnalyzer: [PSUseDeclaredVarsMoreThanAssignments] The variable 'details' is assigned but never used","(Line 9) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Connect-Teams.ps1' (Line )","$PSScriptRoot/Global-ErrorHandling.ps1, MicrosoftTeams","1","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Connect-TeamsService","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/Global-ErrorHandling.ps1, MicrosoftTeams Use Write-Output/Write-Verbose instead of Write-Host: Line 10: Write-Host \"\uD83D\uDD10 Already connected to Microsoft Teams.\" -ForegroundColor Green","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 10: Write-Host \"\uD83D\uDD10 Already connected to Microsoft Teams.\" -ForegroundColor Green; Line 20: Write-Host \"\uD83D\uDD10 Connected to Microsoft Teams.\" -ForegroundColor Green","Line 20: Write-Host \"\uD83D\uDD10 Connected to Microsoft Teams.\" -ForegroundColor Green Functions missing help comments: Connect-TeamsService Unused functions: Connect-TeamsService No corresponding .Tests.ps1 file found","Missing Function Help","Please use Write-Error or throw statements in catch blocks","Property","PSScriptAnalyzer: [PSAvoidUsingEmptyCatchBlock] Empty catch block is used","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Get-StandardDeskName.ps1","p":[";",".","$PSScriptRoot/Global-ErrorHandling.ps1","1","10","Add input validation for user/script input","Add or improve header comment","Add Write-Log calls for key actions","Add Write-Verbose or Write-Debug for detailed output","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/Global-ErrorHandling.ps1 Add parameter validation attributes: Line 11: [Parameter(Mandatory)][string]$SiteCode,","Get-StandardDeskName","Line 11: [Parameter(Mandatory)][string]$SiteCode,; Line 12: [Parameter(Mandatory)][string]$Building,; Line 13: [Parameter(Mandatory)][string]$Floor,; Line 14: [Parameter(Mandatory)][int]$DeskNumber","Line 12: [Parameter(Mandatory)][string]$Building,","Line 13: [Parameter(Mandatory)][string]$Floor,","Line 14: [Parameter(Mandatory)][int]$DeskNumber Functions missing help comments: Get-StandardDeskName Unused functions: Get-StandardDeskName No corresponding .Tests.ps1 file found.","Missing Function Help","Move param block above error handler","Param Block","Param Line","Param Validation","Property","Suggestions/Issues:","True","Unused Functions","Value"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Global-ErrorHandling.ps1","p":[".","(Line 14) PSScriptAnalyzer: [PSAvoidGlobalVars] Found global variable 'Global:OSM_ErrorTrapLoaded'","(Line 15) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Global-ErrorHandling.ps1' uses Write-Host","(Line 21) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Global-ErrorHandling.ps1' (Line )","$PSScriptRoot\\Write-Log.ps1","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Dot-source Global-ErrorHandling.ps1 after param block","External Dependencies","External dependencies: $PSScriptRoot\\Write-Log.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 21: Write-Host \"`n⚠️ Non-fatal error in $: (_.Exception.Message)\" -ForegroundColor Yellow No corresponding .Tests.ps1 file found","Header Comment","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 21: Write-Host \"`n⚠️ Non-fatal error in $: (_.Exception.Message)\" -ForegroundColor Yellow","Property","PSScriptAnalyzer: [PSAvoidGlobalVars] Found global variable 'Global:OSM_ErrorTrapLoaded'","Suggestions/Issues:","True","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1","p":[".","(Line 43) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Write-Log.ps1' (Line ) PSScriptAnalyzer: [PSAvoidOverwritingBuiltInCmdlets] 'Write-Log' is a cmdlet that is included with PowerShell (version core-6.1.0-windows) whose definition should not be overridden (Line 8)","9","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Dot-source Global-ErrorHandling.ps1 after param block","Header Comment","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 10: [Parameter(Mandatory)]","Line 43: Write-Host \"$prefix $line\" -ForegroundColor $color","Missing Function Help","Param Block","Param Line","Param Validation","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Write-Log.ps1' uses Write-Host","Suggestions/Issues:","True","Unused Functions","Use Write-Output/Write-Verbose instead of Write-Host: Line 43: Write-Host \"$prefix $line\" -ForegroundColor $color Add parameter validation attributes: Line 10: [Parameter(Mandatory)] Functions missing help comments: Write-Log Unused functions: Write-Log No corresponding .Tests.ps1 file found","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\Export-SiteStructureTemplates.ps1","p":[".","(Line 2) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Export-SiteStructureTemplates.ps1' (Line )","(Line 37) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Export-SiteStructureTemplates' uses a plural noun","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","A singular noun should be used instead","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","Export-SiteStructureTemplates","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 37: Write-Host \"`n\uD83D\uDCC1 Templates exported to $folder\" Functions missing help comments: Export-SiteStructureTemplates Unused functions: Export-SiteStructureTemplates No corresponding .Tests.ps1 file found","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 37: Write-Host \"`n\uD83D\uDCC1 Templates exported to $folder\"","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Export-SiteStructureTemplates.ps1' uses Write-Host","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\Import-SiteStructureFromCSV.ps1","p":[";",".","(Line 19) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Import-SiteStructureFromCSV.ps1' uses Write-Host","(Line 48) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Import-SiteStructureFromCSV.ps1' (Line )","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 19: Write-Host \"✅ Imported Sites\"","Import-SiteStructureFromCSV","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 19: Write-Host \"✅ Imported Sites\"; Line 48: Write-Host \"✅ Imported Buildings and Floors\"","Line 48: Write-Host \"✅ Imported Buildings and Floors\" Functions missing help comments: Import-SiteStructureFromCSV Unused functions: Import-SiteStructureFromCSV No corresponding .Tests.ps1 file found","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Import-SiteStructureFromCSV.ps1' uses Write-Host","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\List-SiteStructure.ps1","p":[";",".","(Line 13) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'List-SiteStructure.ps1' uses Write-Host","(Line 15) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'List-SiteStructure' uses an unapproved verb","(Line 2) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'List-SiteStructure.ps1' (Line )","(Line 9) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'List-SiteStructure.ps1' uses Write-Host","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Log calls for key actions","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 9: Write-Host \"`n\uD83D\uDCCD Site: $($site.SiteCode) - $($site.SiteName)\" -ForegroundColor Cyan","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 13: Write-Host \" \uD83C\uDFE2 Building: $($b.BuildingCode) - $($b.BuildingName)\" -ForegroundColor Yellow","Line 15: Write-Host \" ▸ Floor $($floor.FloorNumber): $($floor.FloorName)\" -ForegroundColor Gray Functions missing help comments: List-SiteStructure Unused functions: List-SiteStructure No corresponding .Tests.ps1 file found","Line 9: Write-Host \"`n\uD83D\uDCCD Site: $($site.SiteCode) - $($site.SiteName)\" -ForegroundColor Cyan; Line 13: Write-Host \" \uD83C\uDFE2 Building: $($b.BuildingCode) - $($b.BuildingName)\" -ForegroundColor Yellow; Line 15: Write-Host \" ▸ Floor $($floor.FloorNumber): $($floor.FloorName)\" -ForegroundColor Gray","List-SiteStructure","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'List-SiteStructure.ps1' uses Write-Host","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\Sync-MetadataToCloud.ps1","p":[";",".","(Line 6) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Sync-MetadataToCloud.ps1' uses Write-Host","(Line 8) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Sync-MetadataToCloud.ps1' uses Write-Host","(Line 9) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Sync-MetadataToCloud.ps1' (Line )","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add or improve header comment","Add Write-Log calls for key actions","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 6: Write-Host \"Microsoft Places currently does not provide full Graph API write support for sites/buildings/floors.\"","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 6: Write-Host \"Microsoft Places currently does not provide full Graph API write support for sites/buildings/floors.\"; Line 8: Write-Host \"`nℹ️ Keep track of Places API features here:\"; Line 9: Write-Host \" https://learn.microsoft.com/en-us/microsoftplaces/\"-ForegroundColor Blue","Line 8: Write-Host \"`nℹ️ Keep track of Places API features here:\"","Line 9: Write-Host \" https://learn.microsoft.com/en-us/microsoftplaces/\"-ForegroundColor Blue Functions missing help comments: Sync-MetadataToCloud Unused functions: Sync-MetadataToCloud No corresponding .Tests.ps1 file found","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Sync-MetadataToCloud.ps1' uses Write-Host","Suggestions/Issues:","Sync-MetadataToCloud","True","Unused Functions","Value","Write-Host Usage"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\SiteManagement\\CachedResources\\Refresh-CachedResources.ps1","p":[";",".","(Line 112) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Refresh-CachedResources.ps1' uses Write-Host","(Line 116) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Refresh-CachedResources.ps1' (Line )","(Line 41) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Refresh-CachedResources.ps1' uses Write-Host","(Line 44) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Refresh-CachedResources.ps1' uses Write-Host","(Line 70) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Refresh-CachedResources.ps1' uses Write-Host","$PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","13","9","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 41: Write-Host \"\uD83D\uDD52 Metadata was last refreshed $([int]$minutesOld) minutes ago.\" -ForegroundColor Yellow","Header Comment","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 112: Write-Host \"`n✅ Cached resource metadata updated.\" -ForegroundColor Green","Line 116: Write-Host \"`n\uD83D\uDFE1 No changes detected in metadata","Line 41: Write-Host \"\uD83D\uDD52 Metadata was last refreshed $([int]$minutesOld) minutes ago.\" -ForegroundColor Yellow; Line 44: Write-Host \"⏭️ Skipping metadata refresh.\" -ForegroundColor Yellow; Line 70: Write-Host \" n\uD83D\uDCE5 Fetching Room and Equipment Mailboxes...;br / Line 112: Write-Host n✅ Cached resource metadata updated.\" -ForegroundColor Green; Line 116: Write-Host \"`n\uD83D\uDFE1 No changes detected in metadata. Skipping write.\"","Line 44: Write-Host \"⏭️ Skipping metadata refresh.\" -ForegroundColor Yellow","Line 70: Write-Host \"`n\uD83D\uDCE5 Fetching Room and Equipment Mailboxes...\"","Param Block","Param Line","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Refresh-CachedResources.ps1' uses Write-Host","Skipping write.\" No corresponding .Tests.ps1 file found","Suggestions/Issues:","True","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TemplateManagement\\Export-AllTemplates.ps1","p":[";",".","(Line 121) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Export-AllTemplates.ps1' (Line ) PSScriptAnalyzer: [PSUseDeclaredVarsMoreThanAssignments] The variable 'domainHint' is assigned but never used","(Line 19) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Export-AllTemplates' uses a plural noun","(Line 8)","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","A singular noun should be used instead","Add .DESCRIPTION to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","ConvertFrom-Json; Line 103: if (!(Test-Path $equipmentFile) -or ((Get-Content $equipmentFile","ConvertFrom-Json; Line 29: $desks = Get-Content \".\\Metadata\\DeskDefinitions.json\" -Raw","ConvertFrom-Json; Line 54: $pools = Get-Content \".\\Metadata\\DeskPools.json\" -Raw","ConvertFrom-Json; Line 70: $sites = Get-Content \".\\Metadata\\SiteDefinitions.json\" -Raw","ConvertFrom-Json; Line 83: $buildings = Get-Content \".\\Metadata\\BuildingDefinitions.json\" -Raw","ConvertFrom-Json).Count -eq 0)) {","Error Handler","Error Handler Line","Export-AllTemplates","Export-AllTemplates (117 lines)","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 121: Write-Host \"`n✅ All templates exported to: $folder\" -ForegroundColor Green Long functions (consider refactoring): Export-AllTemplates (117 lines) Functions missing help comments: Export-AllTemplates Unused functions: Export-AllTemplates No corresponding .Tests.ps1 file found","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 103: if (!(Test-Path $equipmentFile) -or ((Get-Content $equipmentFile | ConvertFrom-Json).Count -eq 0)) { PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Export-AllTemplates.ps1' uses Write-Host","Line 121: Write-Host \"`n✅ All templates exported to: $folder\" -ForegroundColor Green","Line 17: $tenantConfig = Get-Content $tenantConfigPath","Line 29: $desks = Get-Content \".\\Metadata\\DeskDefinitions.json\" -Raw | ConvertFrom-Json","Line 54: $pools = Get-Content \".\\Metadata\\DeskPools.json\" -Raw | ConvertFrom-Json","Line 70: $sites = Get-Content \".\\Metadata\\SiteDefinitions.json\" -Raw | ConvertFrom-Json","Line 83: $buildings = Get-Content \".\\Metadata\\BuildingDefinitions.json\" -Raw | ConvertFrom-Json","Long Functions","Missing Function Help","Property","Slow Cmdlets in Loops","Slow cmdlets in loops: Line 17: $tenantConfig = Get-Content $tenantConfigPath | ConvertFrom-Json","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TemplateManagement\\Export-MetadataTemplates.ps1","p":[".","(Line 2)","(Line 24) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Export-MetadataTemplates.ps1' (Line ) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Export-MetadataTemplates' uses a plural noun","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","A singular noun should be used instead","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","Export-MetadataTemplates","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 24: Write-Host \"`n✅ Templates exported to: $exportFolder\" Functions missing help comments: Export-MetadataTemplates Unused functions: Export-MetadataTemplates No corresponding .Tests.ps1 file found","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 24: Write-Host \"`n✅ Templates exported to: $exportFolder\"","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Export-MetadataTemplates.ps1' uses Write-Host","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TemplateManagement\\Import-FromCSV.ps1","p":[";",".","(Line 54) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Import-FromCSV.ps1' uses Write-Host","(Line 57) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Import-FromCSV.ps1' (Line )","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1","1","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 54: Write-Host \"\uD83D\uDD01 Updating site: $($row.SiteCode)\"","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 54: Write-Host \"\uD83D\uDD01 Updating site: $($row.SiteCode)\"; Line 57: Write-Host \"➕ Adding site: $($row.SiteCode)\"","Line 57: Write-Host \"➕ Adding site: $($row.SiteCode)\" No corresponding .Tests.ps1 file found","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Import-FromCSV.ps1' uses Write-Host","Suggestions/Issues:","True","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TemplateManagement\\Import-MetadataFromCSV.ps1","p":[";",".","(Line 24) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Import-MetadataFromCSV.ps1' uses Write-Host","(Line 30) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Import-MetadataFromCSV.ps1' (Line )","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1","1","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 24: Write-Host \"✅ Imported Pathways from CSV.\"","Import-MetadataFromCSV","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 24: Write-Host \"✅ Imported Pathways from CSV.\"; Line 30: Write-Host \"✅ Imported Desk Roles from CSV.\"","Line 30: Write-Host \"✅ Imported Desk Roles from CSV.\" Functions missing help comments: Import-MetadataFromCSV Unused functions: Import-MetadataFromCSV No corresponding .Tests.ps1 file found","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Import-MetadataFromCSV.ps1' uses Write-Host","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TemplateManagement\\Validate-CSVImport.ps1","p":[";",".","(Line 102) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Validate-CSVImport.ps1' (Line )","(Line 24) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-CSVImport.ps1' uses Write-Host","(Line 74) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-CSVImport.ps1' uses Write-Host","(Line 79) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-CSVImport.ps1' uses Write-Host","(Line 95) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-CSVImport.ps1' uses Write-Host","(Line 96) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-CSVImport.ps1' uses Write-Host","(Line 98) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-CSVImport.ps1' uses Write-Host","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1","1","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Write-Log.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 24: Write-Host \"`n\uD83D\uDCC1 Available CSV files in .\\Imports:\" -ForegroundColor Cyan","ForEach-Object { Write-Host $_}; Line 98: Write-Host \"...and $($invalidRows.Count - 10) more issues not shown\"; Line 102: Write-Host \"`n✅ All rows passed structure validation.\" -ForegroundColor Green","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 102: Write-Host \"`n✅ All rows passed structure validation.\" -ForegroundColor Green No corresponding .Tests.ps1 file found","Line 24: Write-Host \" n\uD83D\uDCC1 Available CSV files in .\\Imports: -ForegroundColor Cyan;br / Line 74: Write-Host n❌ Cannot proceed until required fields are present.\" -ForegroundColor Red; Line 79: Write-Host \" n\uD83D\uDD0D Previewing sample rows... -ForegroundColor Cyan;br / Line 95: Write-Host n⚠️ Found $($invalidRows.Count) data issues:\" -ForegroundColor Yellow; Line 96: $invalidRows","Line 74: Write-Host \"`n❌ Cannot proceed until required fields are present.\" -ForegroundColor Red","Line 79: Write-Host \"`n\uD83D\uDD0D Previewing sample rows...\" -ForegroundColor Cyan","Line 95: Write-Host \"`n⚠️ Found $($invalidRows.Count) data issues:\" -ForegroundColor Yellow","Line 96: $invalidRows | Select-Object -First 10 | ForEach-Object { Write-Host $_ }","Line 98: Write-Host \"...and $($invalidRows.Count - 10) more issues not shown\"","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Validate-CSVImport.ps1' uses Write-Host","Select-Object -First 10","Suggestions/Issues:","True","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Cleanup-TestResources.ps1","p":[";",".","(Line 10)","(Line 10) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Cleanup-TestResources.ps1' (Line ) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Cleanup-TestResources' uses a plural noun","(Line 15) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Cleanup-TestResources' uses an unapproved verb","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","2","A singular noun should be used instead","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Cleanup-TestResources","Consider supporting -WhatIf or -DryRun for safe testing","ConvertFrom-Json","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 15: Write-Host \"Ã¢Å“â€¦ No test mailboxes found.\"","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 15: Write-Host \"Ã¢Å“â€¦ No test mailboxes found.\"; Line 20: Write-Host \"Ã°Å¸Â§Â¹ Removing test mailbox: $($mb.Alias)\"; Line 32: Write-Host \"Ã¢Å“â€¦ Cleanup complete.\"","Line 20: Write-Host \"Ã°Å¸Â§Â¹ Removing test mailbox: $($mb.Alias)\"","Line 27: $desks = Get-Content $metaPath","Line 32: Write-Host \"Ã¢Å“â€¦ Cleanup complete.\" Functions missing help comments: Cleanup-TestResources Unused functions: Cleanup-TestResources No corresponding .Tests.ps1 file found","Missing Function Help","Property","Slow Cmdlets in Loops","Slow cmdlets in loops: Line 27: $desks = Get-Content $metaPath | ConvertFrom-Json PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Cleanup-TestResources.ps1' uses Write-Host","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Run-BookingSimulation.ps1","p":[";",".","(Line 23) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-BookingSimulation.ps1' uses Write-Host","(Line 36)","(Line 38) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-BookingSimulation.ps1' uses Write-Host","(Line 53) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-BookingSimulation.ps1' uses Write-Host","(Line 58) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Run-BookingSimulation.ps1' (Line ) PSScriptAnalyzer: [PSUseDeclaredVarsMoreThanAssignments] The variable 'mailbox' is assigned but never used","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","1","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 23: Write-Host \"`nÃ°Å¸â€œâ€¦ Simulating booking test for: $upn\" -ForegroundColor Cyan","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 23: Write-Host \" nÃ°Å¸â€œâ€¦ Simulating booking test for: $upn -ForegroundColor Cyan;br / Line 38: Write-Host Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Mailbox exists and is reachable. -ForegroundColor Green;br / Line 45: Write-Host Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Calendar processing is set to AutoAccept. -ForegroundColor Green;br / Line 53: Write-Host nÃ°Å¸â€œÂ¬ Running mail flow test...\" -ForegroundColor Cyan; Line 58: Write-Host \"Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Mail flow is working.\" -ForegroundColor Green; Line 73: Write-Host \" nÃ°Å¸â€œÅ Simulation Summary: n\" -ForegroundColor Cyan","Line 38: Write-Host \"Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Mailbox exists and is reachable.\" -ForegroundColor Green","Line 45: Write-Host \"Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Calendar processing is set to AutoAccept.\" -ForegroundColor Green","Line 53: Write-Host \"`nÃ°Å¸â€œÂ¬ Running mail flow test...\" -ForegroundColor Cyan","Line 58: Write-Host \"Ã¢Å“â€\u009DÃ¯Â¸Â\u008F Mail flow is working.\" -ForegroundColor Green","Line 73: Write-Host \" nÃ°Å¸â€œÅ Simulation Summary: n\" -ForegroundColor Cyan No corresponding .Tests.ps1 file found","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-BookingSimulation.ps1' uses Write-Host","Suggestions/Issues:","True","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Run-TestSuite.ps1","p":[";",".","(Line 10) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Run-TestSuite.ps1' (Line )","(Line 18) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-TestSuite.ps1' uses Write-Host","(Line 24) PSScriptAnalyzer: [PSUseApprovedVerbs] The cmdlet 'Run-TestSuite' uses an unapproved verb","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1, $PSScriptRoot\\Test-DeskProvisioning.ps1, $PSScriptRoot\\Test-RoomProvisioning.ps1, $PSScriptRoot\\Test-MailboxSettings.ps1","2","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Log calls for key actions","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1, $PSScriptRoot\\Test-DeskProvisioning.ps1, $PSScriptRoot\\Test-RoomProvisioning.ps1, $PSScriptRoot\\Test-MailboxSettings.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 18: Write-Host \"Logging test results to: $logFile`n\"","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 18: Write-Host \"Logging test results to: $logFile n;br / Line 24: Write-Host nÃ¢Å“â€¦ Test Suite Completed. Review log at: $logFile\"","Line 24: Write-Host \"`nÃ¢Å“â€¦ Test Suite Completed","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Run-TestSuite.ps1' uses Write-Host","Review log at: $logFile\" Functions missing help comments: Run-TestSuite Unused functions: Run-TestSuite No corresponding .Tests.ps1 file found","Run-TestSuite","Suggestions/Issues:","True","Unused Functions","Value","Write-Host Usage"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Simulate-BookingTest.ps1","p":[";",".","(Line 30) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Simulate-BookingTest.ps1' uses Write-Host","(Line 35) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Simulate-BookingTest.ps1' (Line )","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","2","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add or improve header comment","Add Write-Log calls for key actions","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 30: Write-Host \"Ã°Å¸â€œâ€¦ Simulating booking for $upn...\"","Input Validation","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 30: Write-Host \"Ã°Å¸â€œâ€¦ Simulating booking for $upn...\"; Line 35: Write-Host \"Ã¢Å“â€¦ Test booking sent.\" -ForegroundColor Green","Line 35: Write-Host \"Ã¢Å“â€¦ Test booking sent.\" -ForegroundColor Green No corresponding .Tests.ps1 file found","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Simulate-BookingTest.ps1' uses Write-Host","Suggestions/Issues:","True","Value","Write-Host Usage"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Test-DeskProvisioning.ps1","p":[";",".","(Line 21) PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Test-DeskProvisioning.ps1' uses Write-Host","(Line 30) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Test-DeskProvisioning.ps1' (Line )","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","2","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 21: Write-Host \"Ã°Å¸â€\u009DÂ§ Creating test desk resource: $displayName\"","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 21: Write-Host \"Ã°Å¸â€\u009DÂ§ Creating test desk resource: $displayName\"; Line 30: Write-Host \"Ã¢Å“â€¦ Desk created and configured.\"","Line 30: Write-Host \"Ã¢Å“â€¦ Desk created and configured.\" Functions missing help comments: Test-DeskProvisioning Unused functions: Test-DeskProvisioning No corresponding .Tests.ps1 file found","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Test-DeskProvisioning.ps1' uses Write-Host","Suggestions/Issues:","Test-DeskProvisioning","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Test-MailboxSettings.ps1","p":[".","(Line 10) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Test-MailboxSettings.ps1' (Line )","(Line 17) PSScriptAnalyzer: [PSUseSingularNouns] The cmdlet 'Test-MailboxSettings' uses a plural noun","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","2","A singular noun should be used instead","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 17: Write-Host \"Ã°Å¸â€\u009DÂ\u008D $($mb.Alias) - AutoAccept: $($cp.AutomateProcessing)\" Functions missing help comments: Test-MailboxSettings Unused functions: Test-MailboxSettings No corresponding .Tests.ps1 file found","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 17: Write-Host \"Ã°Å¸â€\u009DÂ\u008D $($mb.Alias) - AutoAccept: $($cp.AutomateProcessing)\"","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Test-MailboxSettings.ps1' uses Write-Host","Suggestions/Issues:","Test-MailboxSettings","True","Unused Functions","Value","Write-Host Usage","Write-Log"]},{"l":"C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\TestSuite\\Test-RoomProvisioning.ps1","p":[".","(Line 21) PSScriptAnalyzer: [PSUseBOMForUnicodeEncodedFile] Missing BOM encoding for non-ASCII encoded file 'Test-RoomProvisioning.ps1' (Line )","$PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1","2","Add .DESCRIPTION to header comment","Add .SYNOPSIS to header comment","Add input validation for user/script input","Add or improve header comment","Add Write-Verbose or Write-Debug for detailed output","Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected","Consider supporting -WhatIf or -DryRun for safe testing","Error Handler","Error Handler Line","External Dependencies","External dependencies: $PSScriptRoot/../Shared/Global-ErrorHandling.ps1, C:\\Users\\pc\\Documents\\GitProjects\\OfficeSpaceManager\\Shared\\Connect-ExchangeAdmin.ps1 Use Write-Output/Write-Verbose instead of Write-Host: Line 21: Write-Host \"Ã°Å¸Â\u008Fâ€”Ã¯Â¸Â\u008F Creating test room resource: $displayName\" Functions missing help comments: Test-RoomProvisioning Unused functions: Test-RoomProvisioning No corresponding .Tests.ps1 file found","Instead, use Write-Output, Write-Verbose, or Write-Information","Line 21: Write-Host \"Ã°Å¸Â\u008Fâ€”Ã¯Â¸Â\u008F Creating test room resource: $displayName\"","Missing Function Help","Property","PSScriptAnalyzer: [PSAvoidUsingWriteHost] File 'Test-RoomProvisioning.ps1' uses Write-Host","Suggestions/Issues:","Test-RoomProvisioning","True","Unused Functions","Value","Write-Host Usage","Write-Log"]}],[{"l":"Retype Documentation Management Instructions for Copilot"},{"l":"1. Retype Project Setup","p":["The documentation site is managed using Retype.","Source content lives in the .website/ folder. Never edit files in docs/ directly; always update .website/ and run retype build to regenerate the site.","The root of the project contains retype.yml for configuration. Reference Retype configuration docs for options.","To build the site, run:","Output will be in the docs/ folder."]},{"l":"2. Website Structure & Content","p":[".website/ is organised by topic:","project-overview/(idea.md, specification.md, folder-structure.md, design-philosophy.md)","user-guides/(getting-started.md, backup-and-restore.md, testing.md, menu-structure.md)","issues/(knownissues.md, todo.md)","contributing/(CONTRIBUTING.md)","code/(MODULES.md, API docs)","support/(support.md, contact.md)","buy-me-a-kofi/(optional)","index.md(project landing page)","LICENSE.md (project license)","Each folder/file may include an index.yml to control navigation order."]},{"l":"3. Document Creation & Editing","p":["Create new documentation by adding Markdown files to the appropriate .website/ subfolder.","Use EN-AU spelling, accessible language, and inclusive formatting.","Start each Markdown file with !-- omit from toc -- unless otherwise required.","Use proper Markdown headings, lists, code blocks, and tables for structure and clarity.","Use relative links for internal references.","Update navigation/index files ( index.yml) as needed to maintain order."]},{"l":"4. Using Snippets for Retype Content","p":["Use VS Code snippets to quickly insert Retype-specific blocks, callouts, embeds, panels, tabs, and reference links.","Example snippet usage:","Type the prefix (e.g., retype-tab-block) and press Tab or Ctrl+Space to insert a formatted block.","Common Retype snippets (see your retype.code-snippets file for full list):","retype-page: Insert a page block with label, layout, order, visibility, and category.","retype-yml: Insert a YML order block.","retype-callout-*: Insert callout blocks (base, primary, tip, danger, etc.).","retype-embed: Insert embed blocks for links or YouTube.","retype-image: Insert image blocks with title, path, and alt text.","retype-panel: Insert multi-panel blocks.","retype-ref-link: Insert reference links.","retype-tab-block: Insert tabbed content blocks."]},{"l":"5. Building & Publishing the Site","p":["After editing or adding documentation, run retype build to regenerate the site.","Review the output in the docs/ folder.","Commit and push changes to the repository to update the published site (if using GitHub Pages or similar)."]},{"l":"6. Best Practices","p":["Always keep .website/ and root documentation in sync.","Use snippets to maintain consistent formatting and speed up authoring.","Regularly review for accessibility, inclusive language, and EN-AU spelling.","Update retype.yml and navigation files as the site evolves.","Document any custom Retype configurations or themes in README.md or CONTRIBUTING.md."]},{"l":"7. Troubleshooting","p":["If snippets do not appear, check VS Code language mode and snippet file syntax.","If the site does not build, review retype.yml and Markdown formatting for errors.","For advanced configuration, refer to Retype documentation.","Reference:","Retype Documentation","[OfficeSpaceManager CommonInstructions](see your project for details)","Your current VS Code snippets in retype.code-snippets"]}],[{"l":"Retype VS Code Snippet Expansion Draft (with Documentation Links)","p":["This document proposes new and improved VS Code snippets for Retype documentation authoring, with inline comments referencing the relevant Retype documentation for each option. All snippets are formatted for direct use in your .code-snippets file."]},{"l":"Retype Page Front Matter"},{"l":"Retype Folder Front Matter"},{"l":"Retype Callout Block"},{"l":"Retype Tabs Block"},{"l":"Retype Panel Block"},{"l":"Retype Embed Block"},{"l":"Retype Reference Link"},{"l":"Retype Image Block"},{"l":"GitHub Markdown Callout"},{"l":"Retype Table Block"},{"l":"Retype Footnote"},{"l":"Retype Definition List"},{"l":"Retype Task List"},{"l":"Retype Horizontal Rule"},{"l":"Retype Code Block","p":["Reference:","Retype Documentation"]}],[{"l":"TESTPLAN"},{"l":"Invoke-MainMenu.ps1","p":["// TESTING: Invoke-MainMenu.ps1// [X] TESTING: Main CLI entry point launches and displays menu// [X] TESTING: -LogVerbose flag enables transcript and input logging// [] TESTING: First-time setup enforced on first run// [] TESTING: Exchange Online connection required and validated"]},{"l":"Backups","p":["// TESTING: Backups// [] TESTING: Save-MetadataSnapshot.ps1 creates valid metadata backup// [] TESTING: Restore-MetadataSnapshot.ps1 restores backup correctly// [] TESTING: Backups/ConfigBackups/ and Backups/Snapshots/ are populated and managed"]},{"l":"CLI","p":["// TESTING: CLI// [] TESTING: ConfigurationMenu.ps1 launches and updates config// [] TESTING: LogsMenu.ps1 displays and manages logs// [] TESTING: ManageResourcesMenu.ps1 manages resources as expected// [] TESTING: OrphanMetadatamenu.ps1 identifies and manages orphaned metadata// [] TESTING: Wizards/ interactive flows function correctly"]},{"l":"config","p":["// TESTING: config// [] TESTING: FirstRunComplete.json is set after first run// [] TESTING: TenantConfig.json is loaded and validated"]},{"l":"Configuration","p":["// TESTING: Configuration// [] TESTING: Create-ConfigBackup.ps1 creates config backup ZIP// [] TESTING: Enable-PlacesFeatures.ps1 enables Places features// [] TESTING: Restore-ConfigBackup.ps1 restores config from backup// [] TESTING: Run-FirstTimeSetup.ps1 completes setup// [] TESTING: Validate-ExchangeSetup.ps1 validates Exchange setup// [] TESTING: Validate-PlacesFeatures.ps1 validates Places/Teams setup"]},{"l":"EnvironmentSetup","p":["// TESTING: EnvironmentSetup// [] TESTING: Ensure-CalendarProcessingSettings.ps1 applies correct settings// [] TESTING: Pin-PlacesAppInTeams.ps1 pins app in Teams// [] TESTING: Update-MailboxTypes.ps1 updates mailbox types"]},{"l":"Logs","p":["// TESTING: Logs// [] TESTING: Log files are created and rotated// [] TESTING: Clear-LogHistory.ps1 clears logs// [] TESTING: Compress-Logs.ps1 compresses logs// [] TESTING: Export-ActionHistory.ps1 exports action history// [] TESTING: View-LogHistory.ps1 displays logs"]},{"l":"Metadata","p":["// TESTING: Metadata// [] TESTING: .lastSync.json is updated after sync// [] TESTING: CachedResources.json is updated and valid"]},{"l":"Modules","p":["// TESTING: Modules// [] TESTING: CLI/ menu rendering and user interaction logic// [] TESTING: Configuration/ import/export, backup/restore, validation// [] TESTING: Logging/ centralised logging and error handling// [] TESTING: Reporting/ summary generation// [] TESTING: SiteManagement/ site/building/floor/desk management// [] TESTING: UserManagement/ user and permissions logic// [] TESTING: Utilities/ helper and utility functions"]},{"l":"OrphanFixer","p":["// TESTING: OrphanFixer// [] TESTING: Detect-NonStandardResources.ps1 detects non-standard resources// [] TESTING: Find-OrphanedResources.ps1 finds orphaned resources// [] TESTING: Fix-OrphanedResources.ps1 remediates orphaned resources// [] TESTING: Suggest-RenameResource.ps1 suggests resource renames// [] TESTING: Validate-DeskPoolMappings.ps1 validates desk pool mappings"]},{"l":"SiteManagement","p":["// TESTING: SiteManagement// [] TESTING: Export-SiteStructureTemplates.ps1 exports templates// [] TESTING: Import-SiteStructureFromCSV.ps1 imports from CSV// [] TESTING: Get-SiteStructure.ps1 retrieves site structure// [] TESTING: Sync-MetadataToCloud.ps1 syncs metadata to cloud"]},{"l":"TemplateManagement","p":["// TESTING: TemplateManagement// [] TESTING: Export-AllTemplates.ps1 exports all templates// [] TESTING: Export-MetadataTemplates.ps1 exports metadata templates// [] TESTING: Import-FromCSV.ps1 imports from CSV// [] TESTING: Import-MetadataFromCSV.ps1 imports metadata from CSV// [] TESTING: Validate-CSVImport.ps1 validates CSV import"]},{"l":"Tests","p":["// TESTING: Tests// [] TESTING: Unit and integration tests exist and pass"]},{"l":"TestSuite","p":["// TESTING: TestSuite// [] TESTING: Cleanup-TestResources.ps1 removes test resources// [] TESTING: Run-BookingSimulation.ps1 simulates booking scenarios// [] TESTING: Run-TestSuite.ps1 runs all tests// [] TESTING: Simulate-BookingTest.ps1 simulates booking test// [] TESTING: Test-DeskProvisioning.ps1 tests desk provisioning// [] TESTING: Test-MailboxSettings.ps1 tests mailbox settings// [] TESTING: Test-RoomProvisioning.ps1 tests room provisioning"]}]]